<?xml version="1.0"?>
<courseleaf>



<text>
<![CDATA[  
<h2>Overview</h2>
<p>The Department of Electrical Engineering and Computer Sciences (EECS) offers one of the strongest research and instructional programs in this field anywhere in the world. Our key strength is our array of cross-disciplinary, team-driven projects. The integration of Electrical Engineering (EE) and Computer Science (CS) forms the core, with strong interactions that extend into biological sciences, mechanical and civil engineering, physical sciences, chemistry, mathematics, and operations research. Our programs have been consistently ranked in the top three nationwide and worldwide by various organizations.</p>
<p>Each year, top students from all parts of the world are attracted to the EECS program and Berkeley by the excellence of the faculty; the breadth of educational opportunities in EECS and campuswide; the proximity to the vibrant California high-tech economy; and the Berkeley environment. The department's close ties to the industry, coupled with its commitment to engineering research and education, ensure that students get a rigorous, relevant, and broad education.</p>
<p>Faculty members at Berkeley are committed to research and discovery at the highest level, informed and creative teaching, and the creative desire to excel. The distinction of the EECS faculty has been recognized in a long list of prestigious honors and awards, including two National Medals of Science, three ACM Turing Awards, three IEEE Medals of Honor, 36 members of the National Academy of Engineering, nine members of the National Academy of Sciences, and 16 fellows of the American Academy of Arts and Sciences.</p>
<p>Unlike many institutions of similar stature, regular faculty teach the vast majority of our courses, and the most exceptional teachers are often also the most exceptional researchers. The department's list of active teaching faculty includes eight winners of the prestigious Berkeley Campus Distinguished Teaching Award.</p>
<p>The mission of the EECS Department has three parts:</p>
<ol>
	<li>Educating future leaders in academia, government, industry, and entrepreneurial pursuit, through a rigorous curriculum of theory and application that develops the ability to solve problems, individually and in teams</li>
	<li>Creating knowledge of fundamental principles and innovative technologies, through research within the core areas of EECS and in collaboration with other disciplines, that is distinguished by its impact on academia, industry, and society</li>
	<li>Serving the communities to which we belong, at local, national, and international levels, with a deep awareness of our ethical responsibilities to our profession and to society</li>
</ol>
<p>Our strategy to accomplish this mission is simple: recruit and retain the very best faculty, students, and staff, and then empower them to direct and drive the creation and dissemination of knowledge. We know that we have succeeded in this mission when our students succeed, becoming leaders and serving society.</p>
<p>Electrical Engineering began on the Berkeley campus more than a century ago, with the hiring of the first electrical engineer, Clarence Cory, into the College of Mechanics. The early days focused on electric power production and distribution, and Cory’s laboratory, in fact, provided the first light and power for the entire campus.</p>
<p>The evolution since then has been dramatic, accelerating rapidly in the latter half of the twentieth century. The development of our world-class computer science faculty followed naturally from the synergies between electronics, systems theory, and computing. In the twenty-first century, EECS has become a broader field, defined more by its intellectual approach to engineering problems than by particular technical solutions. Broadly, EECS harnesses physical processes to perform logical functions, and hence easily extends beyond its core technology base in electronics to, for example, biological systems.</p>
<p>Current strengths in biosystems and computational biology, nanotechnology, artificial intelligence, concurrent and distributed systems, embedded systems, novel devices (such as organic semiconductors), robotics, advanced networking, computer security and trusted computing, energy, and sensor networks, complement beautifully our traditional strengths in physical electronics, integrated circuits, operating systems and networking, graphics and human-computer interaction, communications systems, computer architecture, control theory, signal processing, the theory of computing, programming languages, scientific computing, electronic design automation, power systems, and database management systems. Many of our current research projects are focused on enormous societal challenges and opportunities such as energy efficiency, network intelligence, transportation systems, security, and health care. More than any other engineering discipline, EECS bridges the physical world and the semantic one, creating technologies to serve humanity.</p>
<p>Organizationally, the Department of Electrical Engineering and Computer Sciences smoothly integrates its world-class faculty with dedicated staff and extremely active and involved student groups. Our undergraduate programs recognize the daunting intellectual breadth of the field by offering a great deal of flexibility. These programs are accredited by <a href="http://www.abet.org/">ABET, Inc.</a> and by the <a href="http://www.abet.org/accreditation/">CAC, </a>the Computing Accreditation Commission of ABET, Inc.</p>
<p>Our graduate programs emphasize research, preparing students for leadership positions in industrial labs, government, or academia. Our laboratory and computing facilities are among the best anywhere and have conceived many transformative inventions. Our research programs are well funded, and nearly all of our graduate students receive full financial support.</p>
<h3>Undergraduate Programs</h3>
<p><a href="/2017-18/undergraduate/degree-programs/computer-science/">Computer Science</a>: BA (major program offered through the College of Letters and Science), Minor<br/>
<a href="/2017-18/undergraduate/degree-programs/electrical-engineering-computer-sciences/">Electrical Engineering and Computer Sciences</a>: BS (with concentrations in Electrical and Computer Engineering or Computer Science and Engineering), Minor<br/>
<a href="/2017-18/undergraduate/degree-programs/electrical-engineering-computer-sciences-materials/">Electrical Engineering and Computer Sciences/Materials Science and Engineering</a>: BS (Joint Major)<br/>
<a href="/2017-18/undergraduate/degree-programs/electrical-engineering-computer-sciences-nuclear-joint-major/">Electrical Engineering and Computer Sciences/Nuclear Engineering</a>: BS (Joint Major)</p>
<h3>Graduate Programs</h3>
<p><a href="/2017-18/graduate/degree-programs/computer-science/">Computer Science</a>: MS, PhD<br/>
<a href="/2017-18/graduate/degree-programs/electrical-engineering-computer-sciences/">Electrical Engineering and Computer Sciences</a>: MEng, MS, PhD</p>
  
]]>
</text>
<coursestext>
<![CDATA[
<h3>Select a subject to view courses</h3>
<ul>
	<li><a href="#EECS">Electrical Engineering and Computer Sciences</a></li>
	<li><a href="#computer-science">Computer Science</a></li>
	<li><a href="#electrical-engineering-computer-sciences">Electrical Engineering</a></li>
</ul>
<h3><a id="EECS" name="EECS"></a>Electrical Engineering and Computer Sciences</h3>
<div id="sc_sccoursedescs">
<div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EECS 47D</span> 
<span class="title">Completion of work in Electrical Engineering 16A</span> 
<span class="hours">1 - 3 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Prior to 2007<br/>
This course allows students who have had a linear algebra and/or basic circuit theory course to complete the work in EE16A and be ready for EE16B or EE47E. The course focuses on the fundamentals of designing modern information devices and systems that interface with the real world and provides a comprehensive foundation for core EECS topics in signal processing, learning, control, and circuit design. Modeling is emphasized in a way that deepens mathematical maturity</span><span class="deschide">, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper/pencil exercises.</span><br/>
 <a href="" class="btn-readmore"><span>Completion of work in Electrical Engineering 16A:</span> Read More [+]</a></p>
<div id="459" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Math 1A, Math 1B or equivalent, CS 61A or equivalent (encouraged to be taken concurrently), College level courses in linear algebra and/or circuit theory, and consent of the instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-8 hours of self-paced per week</p><p><strong>Summer:</strong> 8 weeks - 4-13 hours of self-paced per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Alon, Arcak, Ayazifar, Maharbiz, Niknejad, Ranade, Sahai, Subramanian, Tomlin</p></div>
<p><a href="" class="btn-readless"><span>Completion of work in Electrical Engineering 16A:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EECS 47E</span> 
<span class="title">Completion of work in Electrical Engineering 16B</span> 
<span class="hours">1 - 3 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Prior to 2007<br/>
This course allows students who have had a linear algebra and/or basic circuit theory course to complete the work in EE16B. The course focuses on the fundamentals of designing modern information devices and systems that interface with the real world and provides a comprehensive foundation for core EECS topics in signal processing (DFT), learning (SVD/PCA), feedback control, and circuit design. Modeling is emphasized in a way that deepens mathematical maturity, and</span><span class="deschide"> in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper/pencil exercises.</span><br/>
 <a href="" class="btn-readmore"><span>Completion of work in Electrical Engineering 16B:</span> Read More [+]</a></p>
<div id="300" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Math 1A, Math 1B or equivalent, EE16A or EECS 47D or Math 54, CS 61A or equivalent, College level courses in linear algebra and/or circuit theory, and consent of the instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3-8 hours of self-paced per week</p><p><strong>Summer:</strong> 8 weeks - 6-16 hours of self-paced per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Alon, Arcak, Ayazifar, Maharbiz, Niknejad, Ranade, Sahai, Subramanian, Tomlin</p></div>
<p><a href="" class="btn-readless"><span>Completion of work in Electrical Engineering 16B:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EECS 47F</span> 
<span class="title">Completion of work in Computer Science 70</span> 
<span class="hours">1 - 3 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Prior to 2007<br/>
This course allows students who have had a discrete math and/or probability course to complete the work in CS70. Logic, infinity, and induction; applications include undecidability and stable marriage problem. Modular arithmetic and GCDs; applications include primality testing and cryptography. Polynomials; examples include error correcting codes and interpolation. Probability including sample spaces, independence, random variables, law of large numbers; examples</span><span class="deschide"> include load balancing, existence arguments, Bayesian inference.</span><br/>
 <a href="" class="btn-readmore"><span>Completion of work in Computer Science 70:</span> Read More [+]</a></p>
<div id="314" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Sophomore mathematical maturity, programming experience equivalent to that gained in 61A, a prior college level course on discrete math and/or probability, and consent of the instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3-8 hours of self-paced per week</p><p><strong>Summer:</strong> 8 weeks - 6-16 hours of self-paced per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam not required. </p><p><strong>Instructors:</strong> Ranade, Rao, Sahai, Seshia, Vazirani, Walrand</p></div>
<p><a href="" class="btn-readless"><span>Completion of work in Computer Science 70:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EECS C106A</span> 
<span class="title">Introduction to Robotics</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2018, Fall 2017<br/>
An introduction to the kinematics, dynamics, and control of robot manipulators, robotic vision, and sensing. The course covers forward and inverse kinematics of serial chain manipulators, the manipulator Jacobian, force relations, dynamics, and control. It presents elementary principles on proximity, tactile, and force sensing, vision sensors, camera calibration, stereo construction, and motion detection. The course concludes with current applications of</span><span class="deschide"> robotics in active perception, medical robotics, and other areas.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Robotics:</span> Read More [+]</a></p>
<div id="251" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Electrical Engineering 120 or equivalent, consent of instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Electrical Engineering and Computer Science C106A/Bioengineering C106A after completing EE C106A/BioE C125, Electrical Engineering 206A, or Electrical Engineering and Computer Science 206A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Alternative to final exam. </p><p><strong>Instructor:</strong> Bajcsy</p><p><strong>Also listed as:</strong> BIO ENG C106A</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Robotics:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EECS C106B</span> 
<span class="title">Robotic Manipulation and Interaction</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Spring 2018<br/>
This course is a sequel to EECS C106A/Bioengineering C106A, which covers kinematics, dynamics and control of a single robot. This course will cover dynamics and control of groups of robotic manipulators coordinating with each other and interacting with the environment. Concepts will include an introduction to grasping and the constrained manipulation, contacts and force control for interaction with the environment. We will also cover active perception guided manipulation</span><span class="deschide">, as well as the manipulation of non-rigid objects. Throughout, we will emphasize design and human-robot interactions, and applications to applications in manufacturing, service robotics, tele-surgery, and locomotion.</span><br/>
 <a href="" class="btn-readmore"><span>Robotic Manipulation and Interaction:</span> Read More [+]</a></p>
<div id="369" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Electrical Engineering and Computer Science C106A/Bioengineering C106A or consent of the instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Electrical Engineering and Computer Science C106B/Bioengineering C106B after completing Electrical Engineering C106B/Bioengineering C125B, Electrical Engineering 206B, or Electrical Engineering and Computer Science 206B.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Alternative to final exam. </p><p><strong>Instructors:</strong> Bajcsy, Sastry</p><p><strong>Also listed as:</strong> BIO ENG C106B</p></div>
<p><a href="" class="btn-readless"><span>Robotic Manipulation and Interaction:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EECS 126</span> 
<span class="title">Probability and Random Processes</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
This course covers the fundamentals of probability and random processes useful in fields such as networks, communication, signal processing, and control. Sample space, events, probability law. Conditional probability. Independence. Random variables. Distribution, density functions. Random vectors. Law of large numbers. Central limit theorem. Estimation and detection. Markov chains.</span><br/>
 <a href="" class="btn-readmore"><span>Probability and Random Processes:</span> Read More [+]</a></p>
<div id="760" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> CS 70 preferred but not required. Familiarity with linear algebra</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for EECS 126 after completing EE 126.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Ramchandran</p></div>
<p><a href="" class="btn-readless"><span>Probability and Random Processes:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EECS 127</span> 
<span class="title">Optimization Models in Engineering</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
This course offers an introduction to optimization models and their applications, ranging from machine learning and statistics to decision-making and control, with emphasis on numerically tractable problems, such as linear or constrained least-squares optimization.</span><br/>
 <a href="" class="btn-readmore"><span>Optimization Models in Engineering:</span> Read More [+]</a></p>
<div id="858" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> EE 16A &amp; 16B or consent of instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for EECS 127 after taking EECS 227AT or Electrical Engineering 127/227AT.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> El Ghaoui</p><p><strong>Formerly known as:</strong> Electrical Engineering 127</p></div>
<p><a href="" class="btn-readless"><span>Optimization Models in Engineering:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EECS 149</span> 
<span class="title">Introduction to Embedded Systems</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2018, Fall 2017, Fall 2016<br/>
This course introduces students to the basics of modeling, analysis, and design of embedded, cyber-physical systems. Students learn how to integrate computation with physical processes to meet a desired specification. Topics include models of computation, control, analysis and verification, interfacing with the physical world, real-time behaviors, mapping to platforms, and distributed embedded systems. The course has a strong laboratory component</span><span class="deschide">, with emphasis on a semester-long sequence of projects.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Embedded Systems:</span> Read More [+]</a></p>
<div id="252" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives  Outcomes</strong></p><p><strong>Course Objectives:</strong> To develop the skills to realize embedded systems that are safe, reliable, and efficient in their use of resources.<br/>To learn how to model and design the joint dynamics of software, networks, and physical processes.<br/>To learn to think critically about technologies that are available for achieving such joint dynamics.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> EE 16A &amp; B, or permission of instructor; CS 61C and CS 70</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Alternative to final exam. </p><p><strong>Instructors:</strong> Seshia, Lee</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Embedded Systems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EECS 151</span> 
<span class="title">Introduction to Digital Design and Integrated Circuits</span> 
<span class="hours">3 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
An introduction to digital and system design. The material provides a top-down view of the principles, components, and methodologies for large scale digital system design. The underlying CMOS devices and manufacturing technologies are introduced, but quickly abstracted to higher-levels to focus the class on design of larger digital modules for both FPGAs (field programmable gate arrays) and ASICs (application specific integrated circuits). The</span><span class="deschide"> class includes extensive use of industrial grade design automation and verification tools for assignments, labs and projects.<br/>
The class has two lab options: ASIC Lab (EECS 151LA) and FPGA Lab (EECS 151LB). Students must enroll in at least one of the labs concurrently with the class.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Digital Design and Integrated Circuits:</span> Read More [+]</a></p>
<div id="151" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives  Outcomes</strong></p><p><strong>Course Objectives:</strong> The Verilog hardware description language is introduced and used. Basic digital system design concepts, Boolean operations/combinational logic, sequential elements and finite-state-machines, are described. Design of larger building blocks such as arithmetic units, interconnection networks, input/output units, as well as memory design (SRAM, Caches, FIFOs) and integration are also covered. Parallelism, pipelining and other micro-architectural optimizations are introduced. A number of physical design issues visible at the architecture level are covered as well, such as interconnects, power, and reliability.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Electrical Engineering 16A &amp; 16B</p><p><strong>Credit Restrictions:</strong> Students must enroll concurrently in at least one the lab flavors EECS151LA or EECS151LB. Students wishing to take a second lab flavor next term can sign-up only for that Lab section and receive a Letter grade. The pre-requisite for “Lab-only” enrollment that term will be EECS151 from previous terms.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Stojanovic, Wawrzynek</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Digital Design and Integrated Circuits:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EECS 151LA</span> 
<span class="title">Application Specific Integrated Circuits Laboratory</span> 
<span class="hours">2 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g., implementation of a three-stage RISC-V processor with a register file and caches. The design is mapped</span><span class="deschide"> to simulation and layout specification.</span><br/>
 <a href="" class="btn-readmore"><span>Application Specific Integrated Circuits Laboratory:</span> Read More [+]</a></p>
<div id="445" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives  Outcomes</strong></p><p><strong>Course Objectives:</strong> Software testing of digital designs is covered leading to a set of exercises that cover the design flow. Digital synthesis, floor-planning, placement and routing are covered, as well as tools to evaluate timing and power consumption. Chip-level assembly is covered, including instantiation of custom blocks: I/O pads, memories, PLLs, etc.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science 61C, Electrical Engineering 16A &amp; 16B, Electrical Engineering 105</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam not required. </p><p><strong>Instructors:</strong> Stojanovic, Wawrzynek</p></div>
<p><a href="" class="btn-readless"><span>Application Specific Integrated Circuits Laboratory:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EECS 151LB</span> 
<span class="title">Field-Programmable Gate Array Laboratory</span> 
<span class="hours">2 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms. A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow. Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail. The labs exercises culminate with a large design project, e.g., an implementation of a full three-stage RISC-V processor</span><span class="deschide"> system, with caches, graphics acceleration, and external peripheral components. The design is mapped and demonstrated on an FPGA hardware platform.</span><br/>
 <a href="" class="btn-readmore"><span>Field-Programmable Gate Array Laboratory:</span> Read More [+]</a></p>
<div id="68" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Electrical Engineering 16A &amp; 16B; Electrical Engineering 105 recommended and Computer Science 61C</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam not required. </p><p><strong>Instructors:</strong> Stojanovic, Wawrzynek</p></div>
<p><a href="" class="btn-readless"><span>Field-Programmable Gate Array Laboratory:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EECS 206A</span> 
<span class="title">Introduction to Robotics</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2018, Fall 2017<br/>
An introduction to the kinematics, dynamics, and control of robot manipulators, robotic vision, and sensing. The course will cover forward and inverse kinematics of serial chain manipulators, the manipulator Jacobian, force relations, dynamics and control-position, and force control. Proximity, tactile, and force sensing. Network modeling, stability, and fidelity in teleoperation and medical applications of robotics.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Robotics:</span> Read More [+]</a></p>
<div id="397" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> EE 120 or equivalent, or consent of instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for EECS 206A after taking EE C125/Bioengineering C125, EE C106A, or EECS C106A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Bajcsy</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Robotics:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EECS 206B</span> 
<span class="title">Robotic Manipulation and Interaction</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Spring 2018<br/>
This course is a sequel to EECS C106A/206A, which covers kinematics,<br/>
dynamics and control of a single robot. This course will cover dynamics and control of groups of robotic<br/>
manipulators coordinating with each other and interacting with the environment. Concepts will include<br/>
an introduction to grasping and the constrained manipulation, contacts and force control for interaction<br/>
with the environment. We will also cover active perception guided manipulation</span><span class="deschide">, as well as the<br/>
manipulation of non-rigid objects. Throughout, we will emphasize design and human-robot<br/>
interactions, and applications to applications in manufacturing, service robotics, tele-surgery, and<br/>
locomotion.</span><br/>
 <a href="" class="btn-readmore"><span>Robotic Manipulation and Interaction:</span> Read More [+]</a></p>
<div id="936" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> EECS C106A/Bioengineering C106A, EECS 206A or consent of the&lt;BR/&gt;instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for EECS 206B after taking EE C106B/Bioengineering C125B, EECS C106B/BioEngineering C106B, or EE 206B.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Bajcsy, Sastry</p></div>
<p><a href="" class="btn-readless"><span>Robotic Manipulation and Interaction:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EECS 219C</span> 
<span class="title">Formal Methods: Specification, Verification, and Synthesis</span> 
<span class="hours">3 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Spring 2018<br/>
Introduction to the theory and practice of formal methods for the design and analysis of systems, with a focus on algorithmic techniques. Covers selected topics in computational logic and automata theory including modeling and specification formalisms, temporal logics, satisfiability solving, model checking, synthesis, learning, and theorem proving. Applications to software and hardware design, cyber-physical systems, robotics, computer security, and other areas will</span><span class="deschide"> be explored as time permits.</span><br/>
 <a href="" class="btn-readmore"><span>Formal Methods: Specification, Verification, and Synthesis:</span> Read More [+]</a></p>
<div id="412" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Graduate standing or Consent of instructor; Computer Science 170 or equivalent is recommended</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Seshia</p><p><strong>Formerly known as:</strong> Electrical Engineering 219C</p></div>
<p><a href="" class="btn-readless"><span>Formal Methods: Specification, Verification, and Synthesis:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EECS 227AT</span> 
<span class="title">Optimization Models in Engineering</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
This course offers an introduction to optimization models and their applications, ranging from machine learning and statistics to decision-making and control, with emphasis on numerically tractable problems, such as linear or constrained least-squares optimization.</span><br/>
 <a href="" class="btn-readmore"><span>Optimization Models in Engineering:</span> Read More [+]</a></p>
<div id="261" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Mathematics 54 or equivalent or consent of instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for EECS 227AT after taking EECS 127 or Electrical Engineering 127/227AT.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> El Ghaoui</p><p><strong>Formerly known as:</strong> Electrical Engineering 227AT</p></div>
<p><a href="" class="btn-readless"><span>Optimization Models in Engineering:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EECS 251A</span> 
<span class="title">Introduction to Digital Design and Integrated Circuits</span> 
<span class="hours">3 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
An introduction to digital circuit and system design. The material provides a top-down view of the principles, components, and methodologies for large scale digital system design. The underlying CMOS devices and manufacturing technologies are introduced, but quickly abstracted to higher levels to focus the class on design of larger digital modules for both FPGAs (field programmable gate arrays) and ASICs (application specific integrated circuits).</span><span class="deschide"> The class includes extensive use of industrial grade design automation and verification tools for assignments, labs, and projects.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Digital Design and Integrated Circuits:</span> Read More [+]</a></p>
<div id="841" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives  Outcomes</strong></p><p><strong>Course Objectives:</strong> The Verilog hardware description language is introduced and used. Basic digital system design concepts, Boolean operations/combinational logic, sequential elements and finite-state-machines, are described. Design of larger building blocks such as arithmetic units, interconnection networks, input/output units, as well as memory design (SRAM, Caches, FIFOs) and integration are also covered. Parallelism, pipelining and other micro-architectural optimizations are introduced. A number of physical design issues visible at the architecture level are covered as well, such as interconnects, power, and reliability.</p><p><strong>Student Learning Outcomes:</strong> Although the syllabus is the same as EECS151, the assignments and exams for EECS251A will have harder problems that test deeper understanding expected from a graduate level course.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Electrical Engineering 16A &amp; 16B; Computer Science 61C; and recommended: Electrical Engineering 105. Students must enroll concurrently in at least one the laboratory flavors Electrical Engineering and Computer Science 251LA or Electrical Engineering and Computer Science 251LB. Students wishing to take a second laboratory flavor next term can sign-up only for that laboratory section and receive a letter grade. The pre-requisite for “Lab-only” enrollment that term will be Electrical Engineering an</p><p><strong>Credit Restrictions:</strong> Students must enroll concurrently in at least one the laboratory flavors Electrical Engineering and Computer Science 251LA or Electrical Engineering and Computer Science 251LB. Students wishing to take a second laboratory flavor next term can sign-up only for that laboratory section and receive a letter grade. The pre-requisite for “Lab-only” enrollment that term will be Electrical Engineering and Computer Science 251A from previous terms.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Stojanovic, Wawrzynek</p><p><strong>Formerly known as:</strong> Electrical Engineering 241A</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Digital Design and Integrated Circuits:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EECS 251LA</span> 
<span class="title">Introduction to Digital Design and Integrated Circuits Lab</span> 
<span class="hours">2 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
This lab lays the foundation of modern digital design by first presenting the scripting and hardware description language base for specification of digital systems and interactions with tool flows. The labs are centered on a large design with the focus on rapid design space exploration. The lab exercises culminate with a project design, e.g. implementation of a 3-stage RISC-V processor with a register file and caches. The design is mapped to</span><span class="deschide"> simulation and layout specification.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Digital Design and Integrated Circuits Lab:</span> Read More [+]</a></p>
<div id="720" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives  Outcomes</strong></p><p><strong>Course Objectives:</strong> Software testing of digital designs is covered leading to a set of exercises that cover the design flow. Digital synthesis, floor-planning, placement and routing are covered, as well as tools to evaluate timing and power consumption. Chip-level assembly is covered, including instantiation of custom blocks: I/O pads, memories, PLLs, etc.</p><p><strong>Student Learning Outcomes:</strong> Although the syllabus is the same as EECS151LA, the assignments and exams for EECS251LA will have harder problems in labs and in the project that test deeper understanding expected from a graduate level course.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Electrical Engineering 16A &amp; 16B; Computer Science 61C; and recommended: Electrical Engineering 105</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Stojanovic, Wawrzynek</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Digital Design and Integrated Circuits Lab:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EECS 251LB</span> 
<span class="title">Introduction to Digital Design and Integrated Circuits Lab</span> 
<span class="hours">2 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
This lab covers the design of modern digital systems with Field-Programmable Gate Array (FPGA) platforms. A series of lab exercises provide the background and practice of digital design using a modern FPGA design tool flow. Digital synthesis, partitioning, placement, routing, and simulation tools for FPGAs are covered in detail. The labs exercises culminate with a large design project, e.g., an implementation of a full 3-stage RISC-V processor</span><span class="deschide"> system, with caches, graphics acceleration, and external peripheral components. The design is mapped and demonstrated on an FPGA hardware platform.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Digital Design and Integrated Circuits Lab:</span> Read More [+]</a></p>
<div id="778" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives  Outcomes</strong></p><p><strong>Student Learning Outcomes:</strong> Although the syllabus is the same as EECS151LB, the assignments and exams for EECS251LB will have harder problems in labs and in the project that test deeper understanding expected from a graduate level course.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Electrical Engineering 16A &amp; 16B; Computer Science 61C; and recommended: Electrical Engineering 105</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engin and Computer Sci/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Stojanovic, Wawrzynek</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Digital Design and Integrated Circuits Lab:</span> Read Less [-] </a></p></div>
</div>
</div></div>
<h4><a id="computer-science" name="computer-science"></a>Computer Science</h4>
<div id="sc_sccoursedescs">
<div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI C8</span> 
<span class="title">Foundations of Data Science</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Summer 2018 8 Week Session, Spring 2018, Fall 2017<br/>
Foundations of data science from three perspectives: inferential thinking, computational thinking, and real-world relevance. Given data arising from some real-world phenomenon, how does one analyze that data so as to understand that phenomenon? The course teaches critical concepts and skills in computer programming and statistical inference, in conjunction with</span><span class="deschide"> hands-on analysis of real-world datasets, including economic data, document collections, geographical data, and social networks. It delves into social and legal issues surrounding data analysis, including issues of privacy and data ownership.</span><br/>
 <a href="" class="btn-readmore"><span>Foundations of Data Science:</span> Read More [+]</a></p>
<div id="380" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> This course may be taken on its own, but students are encouraged to take it concurrently with a data science connector course (numbered 88 in a range of departments)</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3-3 hours of lecture and 2-2 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 4 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Also listed as:</strong> INFO C8/STAT C8</p></div>
<p><a href="" class="btn-readless"><span>Foundations of Data Science:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI C8R</span> 
<span class="title">Introduction to Computational Thinking with Data</span> 
<span class="hours">3 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Prior to 2007<br/>
An introduction to computational thinking and quantitative reasoning, preparing students for further coursework, especially Foundations of Data Science (CS/Info/Stat C8). Emphasizes the use of computation to gain insight about quantitative problems with real data. Expressions, data types, collections, and tables in Python. Programming practices, abstraction, and iteration. Visualizing univariate and bivariate</span><span class="deschide"> data with bar charts, histograms, plots, and maps. Introduction to statistical concepts including averages and distributions, predicting one variable from another, association and causality, probability and probabilistic simulation. Relationship between numerical functions and graphs. Sampling and introduction to inference.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Computational Thinking with Data:</span> Read More [+]</a></p>
<div id="408" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives  Outcomes</strong></p><p><strong>Course Objectives:</strong> C8R also includes quantitative reasoning concepts that aren’t covered in Data 8. These include certain topics in: principles of data visualization; simulation of random processes; and understanding numerical functions through their graphs. This will help prepare students for computational and quantitative courses other than Data 8.<br/>C8R takes advantage of the complementarity of computing and quantitative reasoning to enliven abstract ideas and build students’ confidence in their ability to solve real problems with quantitative tools. Students learn computer science concepts and immediately apply them to plot functions, visualize data, and simulate random events.<br/>
<br/>Foundations of Data Science (CS/Info/Stat C8, a.k.a. Data 8) is an increasingly popular class for entering students at Berkeley. Data 8 builds students’ computing skills in the first month of the semester, and students rely on these skills as the course progresses. For some students, particularly those with little prior exposure to computing, developing these skills benefits from further time and practice. C8R is a rapid introduction to Python programming, visualization, and data analysis, which will prepare students for success in Data 8.</p><p><strong>Student Learning Outcomes:</strong> Students will be able to perform basic computations in Python, including working with tabular data.<br/>
Students will be able to understand basic probabilistic simulations.<br/>
Students will be able to understand the syntactic structure of Python code.<br/>
Students will be able to use good practices in Python programming.<br/>
Students will be able to use visualizations to understand univariate data and to identify associations or causal relationships in bivariate data.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Credit Restrictions:</strong> Students who have taken COMPSCI/INFO/STAT C8 will receive no credit for COMPSCI/STAT C8R.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Summer:</strong> 6 weeks - 4 hours of lecture, 2 hours of discussion, and 4 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Adhikari</p><p><strong>Also listed as:</strong> STAT C8R</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Computational Thinking with Data:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 9A</span> 
<span class="title">Matlab for Programmers</span> 
<span class="hours">2 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Introduction to the constructs in the Matlab programming language, aimed at students who already know how to program. Array and matrix operations, functions and function handles, control flow, plotting and image manipulation, cell arrays and structures, and the Symbolic Mathematics toolbox.</span><br/>
 <a href="" class="btn-readmore"><span>Matlab for Programmers:</span> Read More [+]</a></p>
<div id="418" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Programming experience equivalent to that gained in Computer Science 10; familiarity with applications of matrix processing</p><p><strong>Repeat rules:</strong> Course may be repeated for credit up to a total of 4 units.Course may be repeated for a maximum of 4 units.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of self-paced per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam required. </p><p><strong>Instructor:</strong> Hilfinger</p></div>
<p><a href="" class="btn-readless"><span>Matlab for Programmers:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 9C</span> 
<span class="title">C for Programmers</span> 
<span class="hours">2 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Self-paced course in the C programming language for students who already know how to program. Computation, input and output, flow of control, functions, arrays, and pointers, linked structures, use of dynamic storage, and implementation of abstract data types.</span><br/>
 <a href="" class="btn-readmore"><span>C for Programmers:</span> Read More [+]</a></p>
<div id="345" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Programming experience with pointers (or addresses in assembly language) and linked data structures equivalent to that gained in Computer Science 9B or 61A, or Engineering 7</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of self-paced per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam required. </p><p><strong>Instructor:</strong> Hilfinger</p></div>
<p><a href="" class="btn-readless"><span>C for Programmers:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 9D</span> 
<span class="title">Scheme and Functional Programming for Programmers</span> 
<span class="hours">2 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2016, Fall 2015, Spring 2015<br/>
Self-paced course in functional programming, using the Scheme programming language, for students who already know how to program. Recursion; higher-order functions; list processing; implementation of rule-based querying.</span><br/>
 <a href="" class="btn-readmore"><span>Scheme and Functional Programming for Programmers:</span> Read More [+]</a></p>
<div id="743" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Programming experience similar to that gained in Computer Science 10 or Engineering 7</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of self-paced per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam required. </p><p><strong>Instructor:</strong> Hilfinger</p></div>
<p><a href="" class="btn-readless"><span>Scheme and Functional Programming for Programmers:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 9E</span> 
<span class="title">Productive Use of the UNIX Environment</span> 
<span class="hours">2 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Use of UNIX utilities and scripting facilities for customizing the programming environment, organizing files (possibly in more than one computer account), implementing a personal database, reformatting text, and searching for online resources.</span><br/>
 <a href="" class="btn-readmore"><span>Productive Use of the UNIX Environment:</span> Read More [+]</a></p>
<div id="316" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Programming experience similar to that gained in Computer Science 61A or Engineering 7; DOS or UNIX experience</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of self-paced per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam required. </p><p><strong>Instructor:</strong> Hilfinger</p></div>
<p><a href="" class="btn-readless"><span>Productive Use of the UNIX Environment:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 9F</span> 
<span class="title">C++ for Programmers</span> 
<span class="hours">2 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Self-paced introduction to the constructs provided in the C++ programming language for procedural and object-oriented programming, aimed at students who already know how to program.</span><br/>
 <a href="" class="btn-readmore"><span>C++ for Programmers:</span> Read More [+]</a></p>
<div id="301" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Programming experience equivalent to that gained in Computer Science 9B or 61A, or Engineering 7</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of self-paced per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam required. </p><p><strong>Instructor:</strong> Hilfinger</p></div>
<p><a href="" class="btn-readless"><span>C++ for Programmers:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 9G</span> 
<span class="title">JAVA for Programmers</span> 
<span class="hours">2 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Self-paced course in Java for students who already know how to program. Applets; variables and computation; events and flow of control; classes and objects; inheritance; GUI elements; applications; arrays, strings, files, and linked structures; exceptions; threads.</span><br/>
 <a href="" class="btn-readmore"><span>JAVA for Programmers:</span> Read More [+]</a></p>
<div id="71" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 9C or 9F or 61A plus experience with object-oriented programming or C-based language</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of self-paced per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam required. </p><p><strong>Instructor:</strong> Garcia</p></div>
<p><a href="" class="btn-readless"><span>JAVA for Programmers:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 9H</span> 
<span class="title">Python for Programmers</span> 
<span class="hours">2 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Introduction to the constructs provided in the Python programming language, aimed at students who already know how to program. Flow of control; strings, tuples, lists, and dictionaries; CGI programming; file input and output; object-oriented programming; GUI elements.</span><br/>
 <a href="" class="btn-readmore"><span>Python for Programmers:</span> Read More [+]</a></p>
<div id="337" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Programming experience equivalent to that gained in Computer Science 10</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1 hour of self-paced per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam required. </p><p><strong>Instructor:</strong> Hilfinger</p></div>
<p><a href="" class="btn-readless"><span>Python for Programmers:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 10</span> 
<span class="title">The Beauty and Joy of Computing</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Summer 2018 8 Week Session, Spring 2018<br/>
An introduction to the beauty and joy of computing. The history, social implications, great principles, and future of computing. Beautiful applications that have changed the world. How computing empowers discovery and progress in other fields. Relevance of computing to the student and society will be emphasized. Students will learn the joy of programming a computer using</span><span class="deschide"> a friendly, graphical language, and will complete a substantial team programming project related to their interests.</span><br/>
 <a href="" class="btn-readmore"><span>The Beauty and Joy of Computing:</span> Read More [+]</a></p>
<div id="612" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for 10 after having taken W10, 61A, 61B, or 61C.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of lecture, 1 hour of discussion, and 4 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 4 hours of lecture, 2 hours of discussion, and 8 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Garcia, Hug</p></div>
<p><a href="" class="btn-readless"><span>The Beauty and Joy of Computing:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI W10</span> 
<span class="title">The Beauty and Joy of Computing</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2012<br/>
This course meets the programming prerequisite for 61A. An introduction to the beauty and joy of computing. The history, social implications, great principles, and future of computing. Beautiful applications that have changed the world. How computing empowers discovery and progress in other fields. Relevance of computing to the student and society will be emphasized. Students will learn the joy of programming a</span><span class="deschide"> computer using a friendly, graphical language, and will complete a substantial team programming project related to their interests.</span><br/>
 <a href="" class="btn-readmore"><span>The Beauty and Joy of Computing:</span> Read More [+]</a></p>
<div id="907" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for W10 after taking 10, 61A, 61B or 61C. A deficient grade in 10 may be removed by taking W10.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of web-based lecture and 5 hours of web-based discussion per week</p><p><strong>Summer:</strong> 8 weeks - 4 hours of web-based lecture and 10 hours of web-based discussion per week</p><!--<p class=""><strong>Additional Format:</strong> Two hours of web-based lecture, four hours of web-based laboratory, and one hour of web-based discussion per week. Four hours of web-based lecture, eight hours of web-based laboratory, and two hours of web-based discussion per week for eight weeks.</p>--><p><strong>Online:</strong>  This is an online course.</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Garcia, Hug</p></div>
<p><a href="" class="btn-readless"><span>The Beauty and Joy of Computing:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 36</span> 
<span class="title">CS Scholars Seminar: The Educational Climate in CS &amp; CS61A technical discussions</span> 
<span class="hours">2 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018<br/>
Computer Science 36 is a seminar for CS Scholars who are concurrently taking CS61A: The Structure and Interpretation of Computer Programs. CS Scholars is a cohort-model program to provide support in exploring and potentially declaring a CS major for students with little to no computational background prior to coming to the university. CS 36 provides an introduction to the CS curriculum at UC Berkeley</span><span class="deschide">, and the overall CS landscape in both industry and academia—through the lens of accessibility and its relevance to diversity. Additionally, CS36 provides technical instruction to review concepts in CS61A, in order to support CS Scholars’ individual learning and success in the CS61A course.</span><br/>
 <a href="" class="btn-readmore"><span>CS Scholars Seminar: The Educational Climate in CS &amp; CS61A technical discussions:</span> Read More [+]</a></p>
<div id="756" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives  Outcomes</strong></p><p><strong>Student Learning Outcomes:</strong> Students will know where to find several support services including tutoring, advising, counseling, and career advice.<br/>
Students will perform as well as possible in the CS61A prerequisite for the CS major. They will also have customized program plans for completing the major within four years.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Prerequisite satisfied Concurrently: Participating in the CS Scholars program, and concurrently taking Computer Science 61A</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of seminar per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Alternative to final exam. </p><p><strong>Instructor:</strong> Hunn</p></div>
<p><a href="" class="btn-readless"><span>CS Scholars Seminar: The Educational Climate in CS &amp; CS61A technical discussions:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 39</span> 
<span class="title">Freshman/Sophomore Seminar</span> 
<span class="hours">1.5 - 2 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Spring 2017<br/>
Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman/Sophomore Seminar:</span> Read More [+]</a></p>
<div id="399" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Priority given to freshmen and sophomores</p><p><strong>Repeat rules:</strong> Course may be repeated for credit when topic changes. Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-3 hours of seminar per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman/Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 39J</span> 
<span class="title">Freshman/Sophomore Seminar</span> 
<span class="hours">1.5 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2010, Spring 2010, Fall 2009<br/>
Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman/Sophomore Seminar:</span> Read More [+]</a></p>
<div id="496" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Priority given to freshmen and sophomores</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-4 hours of seminar per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman/Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 39K</span> 
<span class="title">Freshman/Sophomore Seminar</span> 
<span class="hours">1.5 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2013, Spring 2011, Spring 2010<br/>
Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman/Sophomore Seminar:</span> Read More [+]</a></p>
<div id="143" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Priority given to freshmen and sophomores</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-4 hours of seminar per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman/Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 39M</span> 
<span class="title">Freshman/Sophomore Seminar</span> 
<span class="hours">1.5 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2008<br/>
Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman/Sophomore Seminar:</span> Read More [+]</a></p>
<div id="549" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Priority given to freshmen and sophomores</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-4 hours of seminar per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman/Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 39N</span> 
<span class="title">Freshman/Sophomore Seminar</span> 
<span class="hours">1.5 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2010, Fall 2009<br/>
Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman/Sophomore Seminar:</span> Read More [+]</a></p>
<div id="434" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Priority given to freshmen and sophomores</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-4 hours of seminar per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman/Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 39P</span> 
<span class="title">Freshman/Sophomore Seminar</span> 
<span class="hours">1.5 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2013, Spring 2013, Fall 2012<br/>
Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman/Sophomore Seminar:</span> Read More [+]</a></p>
<div id="313" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Priority given to freshmen and sophomores</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-4 hours of seminar per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman/Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 39Q</span> 
<span class="title">Freshman/Sophomore Seminar</span> 
<span class="hours">1.5 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2011<br/>
Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman/Sophomore Seminar:</span> Read More [+]</a></p>
<div id="702" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Priority given to freshmen and sophomores</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-4 hours of seminar per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman/Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 39R</span> 
<span class="title">Freshman/Sophomore Seminar</span> 
<span class="hours">1.5 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2016, Spring 2013<br/>
Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman/Sophomore Seminar:</span> Read More [+]</a></p>
<div id="119" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Priority given to freshmen and sophomores</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-4 hours of seminar per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman/Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 47A</span> 
<span class="title">Completion of Work in Computer Science 61A</span> 
<span class="hours">1 Unit</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Implementation of generic operations. Streams and iterators. Implementation techniques for supporting functional, object-oriented, and constraint-based programming in the Scheme programming language. Together with 9D, 47A constitutes an abbreviated, self-paced version of 61A for students who have already taken a course equivalent to 61B.</span><br/>
 <a href="" class="btn-readmore"><span>Completion of Work in Computer Science 61A:</span> Read More [+]</a></p>
<div id="461" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 61B or equivalent, 9D, and consent of instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for 47A after taking 61A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 0 hours of self-paced per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Garcia</p></div>
<p><a href="" class="btn-readless"><span>Completion of Work in Computer Science 61A:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 47B</span> 
<span class="title">Completion of Work in Computer Science 61B</span> 
<span class="hours">1 Unit</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Iterators. Hashing, applied to strings and multi-dimensional structures. Heaps. Storage management. Design and implementation of a program containing hundreds of lines of code. Students with sufficient partial credit in 61B may, with consent of instructor, complete the credit in this self-paced course.</span><br/>
 <a href="" class="btn-readmore"><span>Completion of Work in Computer Science 61B:</span> Read More [+]</a></p>
<div id="150" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> A course in data structures, 9G or equivalent, and consent of instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for 47B after taking 61B.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 0 hours of self-paced per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Garcia</p></div>
<p><a href="" class="btn-readless"><span>Completion of Work in Computer Science 61B:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 47C</span> 
<span class="title">Completion of Work in Computer Science 61C</span> 
<span class="hours">1 Unit</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
MIPS instruction set simulation. The assembly and linking process. Caches and virtual memory. Pipelined computer organization. Students with sufficient partial credit in 61C may, with consent of instructor, complete the credit in this self-paced course.</span><br/>
 <a href="" class="btn-readmore"><span>Completion of Work in Computer Science 61C:</span> Read More [+]</a></p>
<div id="114" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Experience with assembly language including writing an interrupt handler, 9C or equivalent, and consent of instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for 47C after taking 61C.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 0 hours of self-paced per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Garcia</p></div>
<p><a href="" class="btn-readless"><span>Completion of Work in Computer Science 61C:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 61A</span> 
<span class="title">The Structure and Interpretation of Computer Programs</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Summer 2018 8 Week Session, Spring 2018<br/>
An introduction to programming and computer science focused on abstraction techniques as means to manage program complexity. Techniques include procedural abstraction; control abstraction using recursion, higher-order functions, generators, and streams; data abstraction using interfaces, objects, classes, and generic operators; and language abstraction using interpreters</span><span class="deschide"> and macros. The course exposes students to programming paradigms, including functional, object-oriented, and declarative approaches. It includes an introduction to asymptotic analysis of algorithms. There are several significant programming projects.</span><br/>
 <a href="" class="btn-readmore"><span>The Structure and Interpretation of Computer Programs:</span> Read More [+]</a></p>
<div id="657" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Mathematics 1A (may be taken concurrently); programming experience equivalent to that gained in 3 or the Advanced Placement Computer Science A course</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Computer Science 61A after completing Computer Science 47A or Computer Science 61AS. A deficient grade in Computer Science 61AS may be removed by taking Computer Science 61A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1.5 hours of discussion, and 1.5 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture, 3 hours of discussion, and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Garcia, Hilfinger</p></div>
<p><a href="" class="btn-readless"><span>The Structure and Interpretation of Computer Programs:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 61AS</span> 
<span class="title">The Structure and Interpretation of Computer Programs (Self-Paced)</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2016, Fall 2015, Summer 2015 8 Week Session<br/>
Introductory programming and computer science. Abstraction as means to control program complexity. Programming paradigms: functional, object-oriented, client/server, and declarative (logic). Control abstraction: recursion and higher order functions. Introduction to asymptotic analysis of algorithms. Data abstraction: abstract data types, type-tagged data, first class data</span><span class="deschide"> types, sequences implemented as lists and as arrays, generic operators implemented with data-directed programming and with message passing. Implementation of object-oriented programming with closures over dispatch procedures. Introduction to interpreters and compilers. There are several significant programming projects. Course may be completed in one or two semesters. Students must complete a mimimum of two units during their first semester of 61AS.</span><br/>
 <a href="" class="btn-readmore"><span>The Structure and Interpretation of Computer Programs (Self-Paced):</span> Read More [+]</a></p>
<div id="264" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Mathematics 1A (may be taken concurrently). Programming experience equivalent to that gained in 10 or the Advanced Placement Computer Science A course is recommended, but is not essential; students without this experience will begin at an earlier point in the online course</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Computer Science 61AS after completing Computer Science 47A or Computer Science 61A. A deficient grade in Computer Science 61A may be removed by taking Computer Science 61AS.</p><p><strong>Repeat rules:</strong> Course may be repeated for credit up to a total of 4 units.Course may be repeated for a maximum of 4 units.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 6 hours of laboratory per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"></span>6 weeks - 15 hours of laboratory per week<br/><span style="width: 15px; display: inline-block;"></span>8 weeks - 11 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Garcia, Harvey, Hilfinger</p></div>
<p><a href="" class="btn-readless"><span>The Structure and Interpretation of Computer Programs (Self-Paced):</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 61B</span> 
<span class="title">Data Structures</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Fundamental dynamic data structures, including linear lists, queues, trees, and other linked structures; arrays strings, and hash tables. Storage management. Elementary principles of software engineering. Abstract data types. Algorithms for sorting and searching. Introduction to the Java programming language.</span><br/>
 <a href="" class="btn-readmore"><span>Data Structures:</span> Read More [+]</a></p>
<div id="661" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer ScienceI 61A or Computer Science 88 or Engineering 7</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Computer Science 61B after completing Computer Science47B or 61BL. A deficiency in Computer Science 61BL may be removed by taking Computer Science 61B.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 2 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture, 2 hours of discussion, and 4 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Hilfinger, Shewchuk</p></div>
<p><a href="" class="btn-readless"><span>Data Structures:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 61BL</span> 
<span class="title">Data Structures and Programming Methodology</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Summer 2018 8 Week Session, Summer 2017 8 Week Session, Summer 2016 8 Week Session<br/>
The same material as in 61B, but in a laboratory-based format.</span><br/>
 <a href="" class="btn-readmore"><span>Data Structures and Programming Methodology:</span> Read More [+]</a></p>
<div id="704" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> COMPSCI 61A or COMPSCI 88 or ENGIN 7</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for 61BL after taking 47B or 61B. Deficiency in 61B may be removed by taking 61BL.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1 hour of lecture and 6 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 2 hours of lecture and 12 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Hilfinger</p></div>
<p><a href="" class="btn-readless"><span>Data Structures and Programming Methodology:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 61C</span> 
<span class="title">Great Ideas of Computer Architecture (Machine Structures)</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Summer 2018 8 Week Session, Spring 2018<br/>
The internal organization and operation of digital computers. Machine architecture, support for high-level languages (logic, arithmetic, instruction sequencing) and operating systems (I/O, interrupts, memory management, process switching). Elements of computer logic design. Tradeoffs involved in fundamental architectural design decisions.</span><br/>
 <a href="" class="btn-readmore"><span>Great Ideas of Computer Architecture (Machine Structures):</span> Read More [+]</a></p>
<div id="151" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 61A, along with either 61B or 61BL, or programming experience equivalent to that gained in 9C, 9F, or 9G</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for 61C after taking 47C or 61CL. Deficiency in 61C may be removed by taking 61CL.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 2 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture, 2 hours of discussion, and 4 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Two hours of lecture, one hour of discussion, and an average of six hours of self-scheduled programming laboratory per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Garcia, Katz, Stojanovic</p></div>
<p><a href="" class="btn-readless"><span>Great Ideas of Computer Architecture (Machine Structures):</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 61CL</span> 
<span class="title">Machine Structures (Lab-Centric)</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2009, Spring 2009, Fall 2008<br/>
The same material as in 61C but in a lab-centric format.</span><br/>
 <a href="" class="btn-readmore"><span>Machine Structures (Lab-Centric):</span> Read More [+]</a></p>
<div id="640" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 61A, along with 61B or 61BL, or programming experience equivalent to that gained in 9C, 9F, or 9G </p><p><strong>Credit Restrictions:</strong> Students will receive no credit for 61CL after taking 47C or 61C. Deficiency in 61C may be removed by taking 61CL.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of lecture, 1 hour of discussion, and 4 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 4 hours of lecture, 2 hours of discussion, and 8 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Two hours of lecture, one hour of discussion, and an average of six hours of self-scheduled programming laboratory per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Garcia, Patterson</p></div>
<p><a href="" class="btn-readless"><span>Machine Structures (Lab-Centric):</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI W61A</span> 
<span class="title">The Structure and Interpretation of Computer Programs (Online)</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Prior to 2007<br/>
An introduction to programming and computer science focused on abstraction techniques as means to manage program complexity. Techniques include procedural abstraction; control abstraction using recursion, higher-order functions, generators, and streams; data abstraction using interfaces, objects, classes, and generic operators; and language abstraction using interpreters and macros. The course exposes students</span><span class="deschide"> to programming paradigms, including functional, object-oriented, and declarative approaches. It includes an introduction to asymptotic analysis of algorithms. There are several significant programming projects.</span><br/>
 <a href="" class="btn-readmore"><span>The Structure and Interpretation of Computer Programs (Online):</span> Read More [+]</a></p>
<div id="934" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Mathematics 1A (may be taken concurrently)</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Computer Science W61A after completing Computer Science 47A or Computer Science 61A. A deficient grade in Computer Science W61A may be removed by taking Computer Science 61A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of web-based lecture, 1.5 hours of laboratory, and 1.5 hours of web-based discussion per week</p><p><strong>Online:</strong>  This is an online course.</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Denero</p></div>
<p><a href="" class="btn-readless"><span>The Structure and Interpretation of Computer Programs (Online):</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI W61B</span> 
<span class="title">Data Structures (Online)</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Not yet offered<br/>
Identical to CS61B, but in an online format. Fundamental dynamic data structures, including linear lists, queues, trees, and other linked structures; arrays strings, and hash tables. Storage management. Elementary principles of software engineering. Abstract data types. Algorithms for sorting and searching. Introduction to the Java programming language.</span><br/>
 <a href="" class="btn-readmore"><span>Data Structures (Online):</span> Read More [+]</a></p>
<div id="507" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science 61A or Computer Science W61A or Computer Science 88 or Engineering 7</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Computer Science W61B after completing Computer Science 47B or or 61B or 61BL. A deficiency in Computer Science 61BL may be removed by taking Computer Science W61B.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of web-based lecture, 2 hours of laboratory, and 1 hour of web-based discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of web-based lecture, 4 hours of laboratory, and 2 hours of web-based discussion per week</p><p><strong>Online:</strong>  This is an online course.</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Hug</p></div>
<p><a href="" class="btn-readless"><span>Data Structures (Online):</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 70</span> 
<span class="title">Discrete Mathematics and Probability Theory</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Summer 2018 8 Week Session, Spring 2018<br/>
Logic, infinity, and induction; applications include undecidability and stable marriage problem. Modular arithmetic and GCDs; applications include primality testing and cryptography. Polynomials; examples include error correcting codes and interpolation. Probability including sample spaces, independence, random variables, law of large numbers; examples include load balancing</span><span class="deschide">, existence arguments, Bayesian inference.</span><br/>
 <a href="" class="btn-readmore"><span>Discrete Mathematics and Probability Theory:</span> Read More [+]</a></p>
<div id="788" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Sophomore mathematical maturity, and programming experience equivalent to that gained in 3 or the Advanced Placement Computer Science A course</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Computer Science 70 after taking Mathematics 55.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 2 hours of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 4 hours of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Rao, Vazirani, Wagner, Sahai</p></div>
<p><a href="" class="btn-readless"><span>Discrete Mathematics and Probability Theory:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI C79</span> 
<span class="title">Societal Risks and the Law</span> 
<span class="hours">3 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2013<br/>
Defining, perceiving, quantifying and measuring risk; identifying risks and estimating their importance; determining whether laws and regulations can protect us from these risks; examining how well existing laws work and how they could be improved; evaluting costs and benefits. Applications may vary by term. This course cannot be used to complete engineering unit or technical elective requirements for students</span><span class="deschide"> in the College of Engineering.</span><br/>
 <a href="" class="btn-readmore"><span>Societal Risks and the Law:</span> Read More [+]</a></p>
<div id="166" class="coursedetails" aria-expanded="false">


<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam not required. </p><p><strong>Also listed as:</strong> POL SCI C79/STAT C79</p></div>
<p><a href="" class="btn-readless"><span>Societal Risks and the Law:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 88</span> 
<span class="title">Computational Structures in Data Science</span> 
<span class="hours">2 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2016<br/>
Development of Computer Science topics appearing in Foundations of Data Science (C8); expands computational concepts and techniques of abstraction. Understanding the structures that underlie the programs, algorithms, and languages used in data science and elsewhere. Mastery of a particular programming language while studying general techniques for managing program complexity, e.g., functional</span><span class="deschide">, object-oriented, and declarative programming. Provides practical experience with composing larger systems through several significant programming projects.</span><br/>
 <a href="" class="btn-readmore"><span>Computational Structures in Data Science:</span> Read More [+]</a></p>
<div id="991" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives  Outcomes</strong></p><p><strong>Course Objectives:</strong> Develop a foundation of computer science concepts that arise in the context of data analytics, including algorithm, representation, interpretation, abstraction, sequencing, conditional, function, iteration, recursion, types, objects, and testing, and develop proficiency in the application of these concepts in the context of a modern programming language at a scale of whole programs on par with a traditional CS introduction course.</p><p><strong>Student Learning Outcomes:</strong> Students will be able to demonstrate a working knowledge of these concepts and a proficiency of programming based upon them sufficient to construct substantial stand-alone programs.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Math 1A. Also, this course is a Data Science connector course and may only be taken concurrently with or after COMPSCI C8/INFO C8/STAT C8. Students may take more than one Data Science connector (88) course if they wish, concurrent with or after having taken the C8 course</p><p><strong>Credit Restrictions:</strong> Students may receive no credit for Computer Science 88 after completing Computer Science 61A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1 hour of lecture and 2 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Computational Structures in Data Science:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 94</span> 
<span class="title">Special Topics</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2015<br/>
Topics will vary semester to semester. See the Computer Science Division announcements.</span><br/>
 <a href="" class="btn-readmore"><span>Special Topics:</span> Read More [+]</a></p>
<div id="691" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor</p><p><strong>Repeat rules:</strong> Course may be repeated for credit when topic changes. Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of lecture per week</p><!--<p class=""><strong>Additional Format:</strong> Special topics courses will include a lecture and depending on the specific offering may also include discussion and/or lab sections at the discretion of the instructor.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Special Topics:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 97</span> 
<span class="title">Field Study</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2015, Spring 2015, Fall 2014<br/>
Students take part in organized individual field sponsored programs with off-campus companies or tutoring/mentoring relevant to specific aspects and applications of computer science on or off campus. Note Summer CPT or OPT students: written report required. Course does not count toward major requirements, but will be counted in the cumulative units toward graduation.</span><br/>
 <a href="" class="btn-readmore"><span>Field Study:</span> Read More [+]</a></p>
<div id="651" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor (see department adviser)</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of fieldwork per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"></span>6 weeks - 2.5-10 hours of fieldwork per week<br/><span style="width: 15px; display: inline-block;"></span>8 weeks - 2-7.5 hours of fieldwork per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Field Study:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 98</span> 
<span class="title">Directed Group Study</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2016, Fall 2015, Spring 2015<br/>
Seminars for group study of selected topics, which will vary from year to year. Intended for students in the lower division.</span><br/>
 <a href="" class="btn-readmore"><span>Directed Group Study:</span> Read More [+]</a></p>
<div id="788" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of directed group study per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Directed Group Study:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 99</span> 
<span class="title">Individual Study and Research for Undergraduates</span> 
<span class="hours">1 - 2 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2015, Fall 2014, Spring 2014<br/>
A course for lower division students in good standing who wish to undertake a program of individual inquiry initiated jointly by the student and a professor. There are no other formal prerequisites, but the supervising professor must be convinced that the student is able to profit by the program.</span><br/>
 <a href="" class="btn-readmore"><span>Individual Study and Research for Undergraduates:</span> Read More [+]</a></p>
<div id="743" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> GPA of 3.4 or better</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 0 hours of independent study per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"></span>6 weeks - 1-5 hours of independent study per week<br/><span style="width: 15px; display: inline-block;"></span>8 weeks - 1-4 hours of independent study per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Individual Study and Research for Undergraduates:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI C100</span> 
<span class="title">Principles &amp; Techniques of Data Science</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
In this course, students will explore the data science lifecycle, including question formulation, data collection and cleaning, exploratory data analysis and visualization, statistical inference and prediction​, and decision-making.​ This class will focus on quantitative critical thinking​ and key principles and techniques needed to carry out this cycle. These include languages for transforming</span><span class="deschide">, querying and analyzing data; algorithms for machine learning methods including regression, classification and clustering; principles behind creating informative data visualizations; statistical concepts of measurement error and prediction; and techniques for scalable data processing.</span><br/>
 <a href="" class="btn-readmore"><span>Principles &amp; Techniques of Data Science:</span> Read More [+]</a></p>
<div id="378" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science/Information/Statistics C8 or Engineering 7; and either Computer Science 61A or Computer Science 88. Corequisite: Mathematics 54 or Electrical Engineering 16A</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 1 hour of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Also listed as:</strong> STAT C100</p></div>
<p><a href="" class="btn-readless"><span>Principles &amp; Techniques of Data Science:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 146L</span> 
<span class="title">Programmable Digital Systems Laboratory</span> 
<span class="hours">2 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2015<br/>
Hardware description languages for digital system design and interactions with tool flows. Design, implementation, and verification of digital designs. Digital synthesis, partitioning, placement, routing, and simulation for Field-Programmable Gate Arrays. Large digital-system design concepts. Project design component – example, a full processor implementation with peripherals.</span><br/>
 <a href="" class="btn-readmore"><span>Programmable Digital Systems Laboratory:</span> Read More [+]</a></p>
<div id="358" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives  Outcomes</strong></p><p><strong>Student Learning Outcomes:</strong> This course is a one-time offering to supplement the EE141 course offered in the Fall 2014, with a lab and project section that cover the design of larger digital systems on a programmable chip platform (FPGA). The EE141 lectures in the Fall 2014 already covered the necessary lecture material, so students who took the EE141 lab in the Fall of 2014 will have a chance to expand their skills into the area of FPGA Digital System Design. Hence the pre-requisite for this course is that a student has taken the EE141 course in the Fall 2014.</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science 61C, Electrical Engineering 105 recommended and Electrical Engineering 141 (taken Fall 2014) - mandatory</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Computer Science 146L after taking Fall 2014 version of Computer Science 150.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of laboratory and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p><p><strong>Instructor:</strong> Stojanovic</p></div>
<p><a href="" class="btn-readless"><span>Programmable Digital Systems Laboratory:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 152</span> 
<span class="title">Computer Architecture and Engineering</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2018, Fall 2016, Spring 2016<br/>
Instruction set architecture, microcoding, pipelining (simple and complex). Memory hierarchies and virtual memory. Processor parallelism: VLIW, vectors, multithreading. Multiprocessors.</span><br/>
 <a href="" class="btn-readmore"><span>Computer Architecture and Engineering:</span> Read More [+]</a></p>
<div id="632" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 61C</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 2 hours of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Alternative to final exam. </p><p><strong>Instructors:</strong> Asanovic, Culler, Kubiatowicz, Wawrzynek</p></div>
<p><a href="" class="btn-readless"><span>Computer Architecture and Engineering:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 160</span> 
<span class="title">User Interface Design and Development</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Summer 2018 8 Week Session, Spring 2018<br/>
The design, implementation, and evaluation of user interfaces. User-centered design and task analysis. Conceptual models and interface metaphors. Usability inspection and evaluation methods. Analysis of user study data. Input methods (keyboard, pointing, touch, tangible) and input models. Visual design principles. Interface prototyping and implementation methodologies and</span><span class="deschide"> tools. Students will develop a user interface for a specific task and target user group in teams.</span><br/>
 <a href="" class="btn-readmore"><span>User Interface Design and Development:</span> Read More [+]</a></p>
<div id="76" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science 61B or 61BL</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Computer Science 160 after taking Computer Science 260A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Agrawala, Canny, Hartmann, Paulos</p></div>
<p><a href="" class="btn-readless"><span>User Interface Design and Development:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 161</span> 
<span class="title">Computer Security</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Introduction to computer security. Cryptography, including encryption, authentication, hash functions, cryptographic protocols, and applications. Operating system security, access control. Network security, firewalls, viruses, and worms. Software security, defensive programming, and language-based security. Case studies from real-world systems.</span><br/>
 <a href="" class="btn-readmore"><span>Computer Security:</span> Read More [+]</a></p>
<div id="835" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 61C (Machine Structures), plus either 70 (Discrete Mathematics) or Mathematics 55</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Paxson, Song, Tygar, Wagner</p></div>
<p><a href="" class="btn-readless"><span>Computer Security:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 162</span> 
<span class="title">Operating Systems and System Programming</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Basic concepts of operating systems and system programming. Utility programs, subsystems, multiple-program systems. Processes, interprocess communication, and synchronization. Memory allocation, segmentation, paging. Loading and linking, libraries. Resource allocation, scheduling, performance evaluation. File systems, storage devices, I/O systems. Protection, security, and privacy.</span><br/>
 <a href="" class="btn-readmore"><span>Operating Systems and System Programming:</span> Read More [+]</a></p>
<div id="706" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science 61B, 61C, and 70</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Joseph, Kubiatowicz, Stoica</p></div>
<p><a href="" class="btn-readless"><span>Operating Systems and System Programming:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 164</span> 
<span class="title">Programming Languages and Compilers</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Survey of programming languages. The design of modern programming languages. Principles and techniques of scanning, parsing, semantic analysis, and code generation. Implementation of compilers, interpreters, and assemblers. Overview of run-time organization and error handling.</span><br/>
 <a href="" class="btn-readmore"><span>Programming Languages and Compilers:</span> Read More [+]</a></p>
<div id="795" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 61B and 61C</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Bodik, Hilfinger, Necula</p></div>
<p><a href="" class="btn-readless"><span>Programming Languages and Compilers:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 168</span> 
<span class="title">Introduction to the Internet: Architecture and Protocols</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Fall 2017, Fall 2016<br/>
This course is an introduction to the Internet architecture. We will focus on the concepts and fundamental design principles that have contributed to the Internet's scalability and robustness and survey the various protocols and algorithms used within this architecture. Topics include layering, addressing, intradomain routing, interdomain routing, reliable delivery, congestion control, and</span><span class="deschide"> the core protocols (e.g., TCP, UDP, IP, DNS, and HTTP) and network technologies (e.g., Ethernet, wireless).</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to the Internet: Architecture and Protocols:</span> Read More [+]</a></p>
<div id="36" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science 61B and 162</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Katz, Paxson, Ratnasamy, Shenker, Stoica</p></div>
<p><a href="" class="btn-readless"><span>Introduction to the Internet: Architecture and Protocols:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 169</span> 
<span class="title">Software Engineering</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Summer 2017 8 Week Session, Fall 2016<br/>
Ideas and techniques for designing, developing, and modifying large software systems. Function-oriented and object-oriented modular design techniques, designing for re-use and maintainability. Specification and documentation. Verification and validation. Cost and quality metrics and estimation. Project team organization and management. Students will work in teams on a substantial</span><span class="deschide"> programming project.</span><br/>
 <a href="" class="btn-readmore"><span>Software Engineering:</span> Read More [+]</a></p>
<div id="887" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science 61B and 61C, and either Computer Science 70 or Mathematics 113</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Brewer, Fox, Necula, Sen</p></div>
<p><a href="" class="btn-readless"><span>Software Engineering:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 170</span> 
<span class="title">Efficient Algorithms and Intractable Problems</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Concept and basic techniques in the design and analysis of algorithms; models of computation; lower bounds; algorithms for optimum search trees, balanced trees and UNION-FIND algorithms; numerical and algebraic algorithms; combinatorial algorithms. Turing machines, how to count steps, deterministic and nondeterministic Turing machines, NP-completeness. Unsolvable and intractable problem</span><span class="deschide">s.</span><br/>
 <a href="" class="btn-readmore"><span>Efficient Algorithms and Intractable Problems:</span> Read More [+]</a></p>
<div id="842" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science 61B and 70</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Demmel, Papadimitriou, Rao, Wagner, Vazirani</p></div>
<p><a href="" class="btn-readless"><span>Efficient Algorithms and Intractable Problems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 172</span> 
<span class="title">Computability and Complexity</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2016, Fall 2015, Spring 2015<br/>
Finite automata, Turing machines and RAMs. Undecidable, exponential, and polynomial-time problems. Polynomial-time equivalence of all reasonable models of computation. Nondeterministic Turing machines. Theory of NP-completeness: Cook's theorem, NP-completeness of basic problems. Selected topics in language theory, complexity and randomness.</span><br/>
 <a href="" class="btn-readmore"><span>Computability and Complexity:</span> Read More [+]</a></p>
<div id="491" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 170</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Papadimitriou, Seshia, Sinclair, Vazirani</p></div>
<p><a href="" class="btn-readless"><span>Computability and Complexity:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 174</span> 
<span class="title">Combinatorics and Discrete Probability</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2018, Spring 2017, Spring 2016<br/>
Permutations, combinations, principle of inclusion and exclusion, generating functions, Ramsey theory. Expectation and variance, Chebychev's inequality, Chernov bounds. Birthday paradox, coupon collector's problem, Markov chains and entropy computations, universal hashing, random number generation, random graphs and probabilistic existence bounds.</span><br/>
 <a href="" class="btn-readmore"><span>Combinatorics and Discrete Probability:</span> Read More [+]</a></p>
<div id="983" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 170</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Bartlett, Papadimitriou, Sinclair, Vazirani</p></div>
<p><a href="" class="btn-readless"><span>Combinatorics and Discrete Probability:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 176</span> 
<span class="title">Algorithms for Computational Biology</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Fall 2017, Fall 2016<br/>
Algorithms and probabilistic models that arise in various computational biology applications: suffix trees, suffix arrays, pattern matching, repeat finding, sequence alignment, phylogenetics, genome rearrangements, hidden Markov models, gene finding, motif finding, stochastic context free grammars, RNA secondary structure. There are no biology prerequisites for this course, but a strong quantitative</span><span class="deschide"> background will be essential.</span><br/>
 <a href="" class="btn-readmore"><span>Algorithms for Computational Biology:</span> Read More [+]</a></p>
<div id="53" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science 70 and 170. Experience programming in a language such as C, C++, Java, or Python</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Song</p></div>
<p><a href="" class="btn-readless"><span>Algorithms for Computational Biology:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 184</span> 
<span class="title">Foundations of Computer Graphics</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2018, Spring 2017, Fall 2016<br/>
Techniques of modeling objects for the purpose of computer rendering: boundary representations, constructive solids geometry, hierarchical scene descriptions. Mathematical techniques for curve and surface representation. Basic elements of a computer graphics rendering pipeline; architecture of modern graphics display devices. Geometrical transformations such as rotation, scaling, translation</span><span class="deschide">, and their matrix representations. Homogeneous coordinates, projective and perspective transformations. Algorithms for clipping, hidden surface removal, rasterization, and anti-aliasing. Scan-line based and ray-based rendering algorithms. Lighting models for reflection, refraction, transparency.</span><br/>
 <a href="" class="btn-readmore"><span>Foundations of Computer Graphics:</span> Read More [+]</a></p>
<div id="41" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science 61B or 61BL; programming skills in C, C++, or Java; linear algebra and calculus</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Comp Sci 184 after taking Comp Sci 284A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> O'Brien, Sequin, Barsky, Ramamoorthi, Agrawala</p></div>
<p><a href="" class="btn-readless"><span>Foundations of Computer Graphics:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 186</span> 
<span class="title">Introduction to Database Systems</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Access methods and file systems to facilitate data access. Hierarchical, network, relational, and object-oriented data models. Query languages for models. Embedding query languages in programming languages. Database services including protection, integrity control, and alternative views of data. High-level interfaces including application generators, browsers, and report writers. Introduction</span><span class="deschide"> to transaction processing. Database system implementation to be done as term project.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Database Systems:</span> Read More [+]</a></p>
<div id="890" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 61B and 61C</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Comp Sci 186 after taking Comp Sci 286A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Franklin, Hellerstein</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Database Systems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 188</span> 
<span class="title">Introduction to Artificial Intelligence</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Summer 2018 8 Week Session, Spring 2018<br/>
Ideas and techniques underlying the design of intelligent computer systems. Topics include search, game playing, knowledge representation, inference, planning, reasoning under uncertainty, machine learning, robotics, perception, and language understanding.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Artificial Intelligence:</span> Read More [+]</a></p>
<div id="960" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science 61A; Computer Science 61B; Computer Science 70</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Abbeel, Klein, Russell</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Artificial Intelligence:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 189</span> 
<span class="title">Introduction to Machine Learning</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Summer 2018 8 Week Session, Spring 2018<br/>
Theoretical foundations, algorithms, methodologies, and applications for machine learning. Topics may include supervised methods for regression and classication (linear models, trees, neural networks, ensemble methods, instance-based methods); generative and discriminative probabilistic models; Bayesian parametric learning; density estimation and clustering; Bayesian networks;</span><span class="deschide"> time series models; dimensionality reduction; programming projects covering a variety of real-world applications.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Machine Learning:</span> Read More [+]</a></p>
<div id="366" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Mathematics 53 and 54; Computer Science 70 or consent of instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Comp Sci 189 after taking Comp Sci 289A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Abbeel, Bartlett, Darrell, El Ghaoui, Jordan, Klein, Malik, Russell</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Machine Learning:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI C191</span> 
<span class="title">Quantum Information Science and Technology</span> 
<span class="hours">3 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2017, Fall 2014, Spring 2012<br/>
This multidisciplinary course provides an introduction to fundamental conceptual aspects of quantum mechanics from a computational and informational theoretic perspective, as well as physical implementations and technological applications of quantum information science. Basic sections of quantum algorithms, complexity, and cryptography, will be touched upon, as well as pertinent physical</span><span class="deschide"> realizations from nanoscale science and engineering.</span><br/>
 <a href="" class="btn-readmore"><span>Quantum Information Science and Technology:</span> Read More [+]</a></p>
<div id="666" class="coursedetails" aria-expanded="false">


<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Crommie, Vazirani, Whaley</p><p><strong>Also listed as:</strong> CHEM C191/PHYSICS C191</p></div>
<p><a href="" class="btn-readless"><span>Quantum Information Science and Technology:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 194</span> 
<span class="title">Special Topics</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Topics will vary semester to semester. See the Computer Science Division announcements.</span><br/>
 <a href="" class="btn-readmore"><span>Special Topics:</span> Read More [+]</a></p>
<div id="164" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor</p><p><strong>Repeat rules:</strong> Course may be repeated for credit when topic changes. Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Special Topics:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 195</span> 
<span class="title">Social Implications of Computer Technology</span> 
<span class="hours">1 Unit</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Topics include electronic community; the changing nature of work; technological risks; the information economy; intellectual property; privacy; artificial intelligence and the sense of self; pornography and censorship; professional ethics. Students will lead discussions on additional topics.</span><br/>
 <a href="" class="btn-readmore"><span>Social Implications of Computer Technology:</span> Read More [+]</a></p>
<div id="474" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for 195 after taking C195/Interdisciplinary Field Study C155 or H195.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1.5 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p><p><strong>Instructor:</strong> Harvey</p></div>
<p><a href="" class="btn-readless"><span>Social Implications of Computer Technology:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI H195</span> 
<span class="title">Honors Social Implications of Computer Technology</span> 
<span class="hours">3 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2014, Fall 2013, Spring 2013<br/>
Topics include electronic community; the changing nature of work; technological risks; the information economy; intellectual property; privacy; artificial intelligence and the sense of self; pornography and censorship; professional ethics. Students may lead discussions on additional topics.</span><br/>
 <a href="" class="btn-readmore"><span>Honors Social Implications of Computer Technology:</span> Read More [+]</a></p>
<div id="29" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Credit Restrictions:</strong> Student will receive no credit for H195 after taking 195 or C195.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1.5 hours of lecture and 1.5 hours of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p><p><strong>Instructor:</strong> Harvey</p></div>
<p><a href="" class="btn-readless"><span>Honors Social Implications of Computer Technology:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI H196A</span> 
<span class="title">Senior Honors Thesis Research</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2016, Fall 2010, Spring 2010<br/>
Thesis work under the supervision of a faculty member. To obtain credit the student must, at the end of two semesters, submit a satisfactory thesis to the Electrical Engineering and Computer Science department archive. A total of four units must be taken. The units many be distributed between one or two semesters in any way. H196A-H196B count as graded technical elective units, but may not</span><span class="deschide"> be used to satisfy the requirement for 27 upper division technical units in the College of Letters and Science with a major in Computer Science.</span><br/>
 <a href="" class="btn-readmore"><span>Senior Honors Thesis Research:</span> Read More [+]</a></p>
<div id="481" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Open only to students in the computer science honors program</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of independent study per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Senior Honors Thesis Research:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI H196B</span> 
<span class="title">Senior Honors Thesis Research</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2010, Spring 2009, Fall 2008<br/>
Thesis work under the supervision of a faculty member. To obtain credit the student must, at the end of two semesters, submit a satisfactory thesis to the Electrical Engineering and Computer Science department archive. A total of four units must be taken. The units many be distributed between one or two semesters in any way. H196A-H196B count as graded technical elective units, but may</span><span class="deschide"> not be used to satisfy the requirement for 27 upper division technical units in the College of Letters and Science with a major in Computer Science.</span><br/>
 <a href="" class="btn-readmore"><span>Senior Honors Thesis Research:</span> Read More [+]</a></p>
<div id="739" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Open only to students in the computer science honors program</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of independent study per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Senior Honors Thesis Research:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 197</span> 
<span class="title">Field Study</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2016, Summer 2016 10 Week Session, Fall 2015<br/>
Students take part in organized individual field sponsored programs with off-campus companies or tutoring/mentoring relevant to specific aspects and applications of computer science on or off campus. Note Summer CPT or OPT students: written report required. Course does not count toward major requirements, but will be counted in the cumulative units toward graduation.</span><br/>
 <a href="" class="btn-readmore"><span>Field Study:</span> Read More [+]</a></p>
<div id="328" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor (see department adviser)</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of fieldwork per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"></span>6 weeks - 2.5-10 hours of fieldwork per week<br/><span style="width: 15px; display: inline-block;"></span>8 weeks - 2-7.5 hours of fieldwork per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Field Study:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 198</span> 
<span class="title">Directed Group Studies for Advanced Undergraduates</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Group study of selected topics in Computer Sciences, usually relating to new developments.</span><br/>
 <a href="" class="btn-readmore"><span>Directed Group Studies for Advanced Undergraduates:</span> Read More [+]</a></p>
<div id="82" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 2.0 GPA or better; 60 units completed</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of directed group study per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Directed Group Studies for Advanced Undergraduates:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">COMPSCI 199</span> 
<span class="title">Supervised Independent Study</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2016, Fall 2015, Spring 2015<br/>
Supervised independent study. Enrollment restrictions apply.</span><br/>
 <a href="" class="btn-readmore"><span>Supervised Independent Study:</span> Read More [+]</a></p>
<div id="76" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor and major adviser</p><p><strong>Credit Restrictions:</strong> Enrollment is restricted; see the Introduction to Courses and Curricula section of this catalog.</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 0 hours of independent study per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"></span>6 weeks - 1-5 hours of independent study per week<br/><span style="width: 15px; display: inline-block;"></span>8 weeks - 1-4 hours of independent study per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Supervised Independent Study:</span> Read Less [-] </a></p></div>
</div>
</div></div>
<h4><a id="electrical-engineering-computer-sciences" name="electrical-engineering-computer-sciences"></a>Electrical Engineering</h4>
<div id="sc_sccoursedescs">
<div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 16A</span> 
<span class="title">Designing Information Devices and Systems I</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
This course and its follow-on course EE16B focus on the fundamentals of designing modern information devices and systems that interface with the real world. Together, this course sequence provides a comprehensive foundation for core EECS topics in signal processing, learning, control, and circuit design while introducing key linear-algebraic concepts motivated by application contexts. Modeling</span><span class="deschide"> is emphasized in a way that deepens mathematical maturity, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper/pencil exercises. The courses are aimed at entering students as well as non-majors seeking a broad foundation for the field.</span><br/>
 <a href="" class="btn-readmore"><span>Designing Information Devices and Systems I:</span> Read More [+]</a></p>
<div id="536" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Math 1A, Math 1B or equivalent (may be taken concurrently), CS 61A or equivalent (encouraged to be taken concurrently)</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Electrical Engineering 16A after completing Electrical Engineering 20 or 40.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 2 hours of discussion, and 3 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture, 4 hours of discussion, and 6 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Alon, Arcak, Ayazifar, Maharbiz, Niknejad, Ranade, Sahai, Subramanian, Tomlin</p></div>
<p><a href="" class="btn-readless"><span>Designing Information Devices and Systems I:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 16B</span> 
<span class="title">Designing Information Devices and Systems II</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
This course is a follow-on to Electrical Engineering 16A, and focuses on the fundamentals of designing and building modern information devices and systems that interface with the real world. The course sequence provides a comprehensive introduction to core EECS topics in circuit design, signals, and systems in an application-driven context. The courses are delivered assuming mathematical</span><span class="deschide"> maturity and aptitude at roughly the level of having completed Math 1A-1B, and are aimed at entering students as well as non-majors seeking a broad introduction to the field.</span><br/>
 <a href="" class="btn-readmore"><span>Designing Information Devices and Systems II:</span> Read More [+]</a></p>
<div id="147" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Electrical Engineering 16A, Designing Information Devices and Systems I</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Electrical Engineering 16B after completing Electrical Engineering 20 or 40.&lt;BR/&gt;</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 2 hours of discussion, and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Alon, Ayazifar, Lustig, Maharbiz, Subramanian, Tomlin</p></div>
<p><a href="" class="btn-readless"><span>Designing Information Devices and Systems II:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 24</span> 
<span class="title">Freshman Seminar</span> 
<span class="hours">1 Unit</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Spring 2017, Spring 2016<br/>
The Freshman Seminar Program has been designed to provide new students with the opportunity to explore an intellectual topic with a faculty member in a small seminar setting. Freshman seminars are offered in all campus departments, and topics may vary from department to department and semester to semester.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman Seminar:</span> Read More [+]</a></p>
<div id="26" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1 hour of seminar per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 25</span> 
<span class="title">What Electrical Engineers Do--Feedback from Recent Graduates</span> 
<span class="hours">1 Unit</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2011<br/>
A Berkeley Electrical Engineering and Computer Sciences degree opens the door to many opportunities, but what exactly are they? Graduation is only a few years away and it's not too early to find out. In this seminar students will hear from practicing engineers who recently graduated. What are they working on? Are they working in a team? What do they wish they had learned better? How did they find their jobs?</span><br/>
 <a href="" class="btn-readmore"><span>What Electrical Engineers Do--Feedback from Recent Graduates:</span> Read More [+]</a></p>
<div id="815" class="coursedetails" aria-expanded="false">


<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1 hour of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p><p><strong>Instructor:</strong> Boser</p></div>
<p><a href="" class="btn-readless"><span>What Electrical Engineers Do--Feedback from Recent Graduates:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 39</span> 
<span class="title">Freshman/Sophomore Seminar</span> 
<span class="hours">2 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Fall 2017, Fall 2016<br/>
Freshman and sophomore seminars offer lower division students the opportunity to explore an intellectual topic with a faculty member and a group of peers in a small-seminar setting. These seminars are offered in all campus departments; topics vary from department to department and from semester to semester. Enrollment limits are set by the faculty, but the suggested limit is 25.</span><br/>
 <a href="" class="btn-readmore"><span>Freshman/Sophomore Seminar:</span> Read More [+]</a></p>
<div id="19" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Priority given to freshmen and sophomores</p><p><strong>Repeat rules:</strong> Course may be repeated for credit when topic changes. Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2-4 hours of seminar per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Freshman/Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 42</span> 
<span class="title">Introduction to Digital Electronics</span> 
<span class="hours">3 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2013, Summer 2013 8 Week Session, Spring 2013<br/>
This course serves as an introduction to the principles of electrical engineering, starting from the basic concepts of voltage and current and circuit elements of resistors, capacitors, and inductors. Circuit analysis is taught using Kirchhoff's voltage and current laws with Thevenin and Norton equivalents. Operational amplifiers with feedback are introduced as basic building</span><span class="deschide"> blocks for amplication and filtering. Semiconductor devices including diodes and MOSFETS and their IV characteristics are covered. Applications of diodes for rectification, and design of MOSFETs in common source amplifiers are taught. Digital logic gates and design using CMOS as well as simple flip-flops are introduced. Speed and scaling issues for CMOS are considered. The course includes as motivating examples designs of high level applications including logic circuits, amplifiers, power supplies, and communication links.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Digital Electronics:</span> Read More [+]</a></p>
<div id="776" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Mathematics 1B</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for 42 after taking 40 or 100.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 6 hours of lecture and 2 hours of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Introduction to Digital Electronics:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 43</span> 
<span class="title">Introductory Electronics Laboratory</span> 
<span class="hours">1 Unit</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2013, Summer 2013 8 Week Session, Spring 2013<br/>
Using and understanding electronics laboratory equipment such as oscilloscope, power supplies, function generator, multimeter, curve-tracer, and RLC-meter. Includes a term project of constructing and testing a robot or other appropriate electromechanical device.</span><br/>
 <a href="" class="btn-readmore"><span>Introductory Electronics Laboratory:</span> Read More [+]</a></p>
<div id="924" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 42 (may be taken concurrently) or equivalent or consent of instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of laboratory per week</p><p><strong>Summer:</strong> 8 weeks - 3.5 hours of laboratory per week</p><!--<p class=""><strong>Additional Format:</strong> Three and one-half hours of laboratory/discussion per week for eight weeks.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Introductory Electronics Laboratory:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 49</span> 
<span class="title">Electronics for the Internet of Things</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018<br/>
Electronics has become pervasive in our lives as a powerful technology with applications in a wide range of fields including healthcare, environmental monitoring, robotics, or entertainment. This course teaches how to build electronic circuits that interact with the environment through sensors and actuators and how to communicate wirelessly with the internet to cooperate with other devices and with</span><span class="deschide"> humans. In the laboratory students design and build representative samples such as solar harvesters, robots, that exchange information with or are controlled from the cloud.</span><br/>
 <a href="" class="btn-readmore"><span>Electronics for the Internet of Things:</span> Read More [+]</a></p>
<div id="362" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives  Outcomes</strong></p><p><strong>Course Objectives:</strong> Electronics has become a powerful and ubiquitous technology supporting solutions to a wide range of applications in fields ranging from science, engineering, healthcare, environmental monitoring, transportation, to entertainment. The objective of this course is to teach students majoring in these and related subjects how to use electronic devices to solve problems in their areas of expertise.<br/>Through the lecture and laboratory, students gain insight into the possibilities and limitations of the technology and how to use electronics to help solve problems. Students learn to use electronics to interact with the environment through sound, light, temperature, motion using sensors and actuators, and how to use electronic computation to orchestrate the interactions and exchange information wirelessly over the internet.</p><p><strong>Student Learning Outcomes:</strong> Deploy electronic sensors and interface them to microcontrollers through digital and analog channels as well as common protocols (I2C, SPI),<br/>
Design, build and test electronic devices leveraging these concepts.<br/>
Interact with the internet and cloud services using protocols such as http, MQTT, Blynk,<br/>
Interface DC motors, steppers and servos to microcontrollers,<br/>
Represent information with voltage, current, power, and energy and how to measure these quantities with laboratory equipment,<br/>
To use and program low-cost and low-power microcontrollers for sensing, actuation, and information processing, and find and use program libraries supporting these tasks<br/>
Understand and make basic low-pass and high-pass filters, Wheatstone bridge etc.<br/>
Use electronics to sense and actuate physical parameters such as temperature, humidity, sound, light, and motion,</p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Engineering 7 or Computer Science 10 or equivalent background in computer programming (including Computer Science 61A, Data Science 8) Math 1a or equivalent background in Calculus</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 2 hours of discussion, and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Boser</p></div>
<p><a href="" class="btn-readless"><span>Electronics for the Internet of Things:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 84</span> 
<span class="title">Sophomore Seminar</span> 
<span class="hours">1 or 2 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Fall 2017, Spring 2016<br/>
Sophomore seminars are small interactive courses offered by faculty members in departments all across the campus. Sophomore seminars offer opportunity for close, regular intellectual contact between faculty members and students in the crucial second year. The topics vary from department to department and semester to semester. Enrollment limited to 15 sophomores.</span><br/>
 <a href="" class="btn-readmore"><span>Sophomore Seminar:</span> Read More [+]</a></p>
<div id="199" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> At discretion of instructor</p><p><strong>Repeat rules:</strong> Course may be repeated for credit when topic changes. Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> <br/><span style="width: 15px; display: inline-block;"></span>5 weeks - 3-6 hours of seminar per week<br/><span style="width: 15px; display: inline-block;"></span>10 weeks - 1.5-3 hours of seminar per week<br/><span style="width: 15px; display: inline-block;"></span>15 weeks - 1-2 hours of seminar per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"></span>6 weeks - 2.5-5 hours of seminar per week<br/><span style="width: 15px; display: inline-block;"></span>8 weeks - 1.5-3.5 hours of seminar per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> The grading option will be decided by the instructor when the class is offered. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Sophomore Seminar:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 97</span> 
<span class="title">Field Study</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2016, Fall 2015, Spring 2015<br/>
Students take part in organized individual field sponsored programs with off-campus companies or tutoring/mentoring relevant to specific aspects and applications of computer science on or off campus. Note Summer CPT or OPT students: written report required. Course does not count toward major requirements, but will be counted in the cumulative units toward graduation.</span><br/>
 <a href="" class="btn-readmore"><span>Field Study:</span> Read More [+]</a></p>
<div id="751" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor (see department adviser)</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of fieldwork per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"></span>6 weeks - 2.5-10 hours of fieldwork per week<br/><span style="width: 15px; display: inline-block;"></span>8 weeks - 2-7.5 hours of fieldwork per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Field Study:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 98</span> 
<span class="title">Directed Group Study for Undergraduates</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2016, Spring 2016, Fall 2015<br/>
Group study of selected topics in electrical engineering, usually relating to new developments.</span><br/>
 <a href="" class="btn-readmore"><span>Directed Group Study for Undergraduates:</span> Read More [+]</a></p>
<div id="820" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of directed group study per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Directed Group Study for Undergraduates:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 99</span> 
<span class="title">Individual Study and Research for Undergraduates</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2016, Fall 2015, Spring 2015<br/>
Supervised independent study and research for students with fewer than 60 units completed.</span><br/>
 <a href="" class="btn-readmore"><span>Individual Study and Research for Undergraduates:</span> Read More [+]</a></p>
<div id="547" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Freshman or sophomore standing and consent of instructor. Minimum GPA of 3.4 required</p><p><strong>Credit Restrictions:</strong> Enrollment is restricted; see the Introduction to Courses and Curricula section of this catalog.</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of independent study per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"></span>6 weeks - 1-5 hours of independent study per week<br/><span style="width: 15px; display: inline-block;"></span>8 weeks - 1-4 hours of independent study per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Individual Study and Research for Undergraduates:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 105</span> 
<span class="title">Microelectronic Devices and Circuits</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
This course covers the fundamental circuit and device concepts needed to understand analog integrated circuits. After an overview of the basic properties of semiconductors, the p-n junction and MOS capacitors are described and the MOSFET is modeled as a large-signal device. Two port small-signal amplifiers and their realization using single stage and multistage CMOS building blocks are discussed.</span><span class="deschide"> Sinusoidal steady-state signals are introduced and the techniques of phasor analysis are developed, including impedance and the magnitude and phase response of linear circuits. The frequency responses of single and multi-stage amplifiers are analyzed. Differential amplifiers are introduced.</span><br/>
 <a href="" class="btn-readmore"><span>Microelectronic Devices and Circuits:</span> Read More [+]</a></p>
<div id="358" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> EE 16A &amp; B</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Microelectronic Devices and Circuits:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG C106A</span> 
<span class="title">Introduction to Robotics</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Fall 2016, Fall 2015<br/>
An introduction to the kinematics, dynamics, and control of robot manipulators, robotic vision, and sensing. The course covers forward and inverse kinematics of serial chain manipulators, the manipulator Jacobian, force relations, dynamics, and control. It presents elementary principles on proximity, tactile, and force sensing, vision sensors, camera calibration, stereo construction, and motion</span><span class="deschide"> detection. The course concludes with current applications of robotics in active perception, medical robotics, and other areas.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Robotics:</span> Read More [+]</a></p>
<div id="667" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> EE 120 or equivalent, consent of instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Bajcsy</p><p><strong>Formerly known as:</strong> Electrical Engineering C125/Bioengineering C125</p><p><strong>Also listed as:</strong> BIO ENG C125</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Robotics:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG C106B</span> 
<span class="title">Robotic Manipulation and Interaction</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2017, Spring 2016<br/>
This course is a sequel to Electrical Engineering C106A/Bioengineering C125, which covers kinematics, dynamics and control of a single robot. This course will cover dynamics and control of groups of robotic manipulators coordinating with each other and interacting with the environment. Concepts will include an introduction to grasping and the constrained manipulation, contacts and force control for</span><span class="deschide"> interaction with the environment. We will also cover active perception guided manipulation, as well as the manipulation of non-rigid objects. Throughout, we will emphasize design and human-robot interactions, and applications to applications in manufacturing, service robotics, tele-surgery, and locomotion.</span><br/>
 <a href="" class="btn-readmore"><span>Robotic Manipulation and Interaction:</span> Read More [+]</a></p>
<div id="485" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Electrical Engineering C106A/Bioengineering C125 or consent of the instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Alternative to final exam. </p><p><strong>Instructors:</strong> Bajcsy, Sastry</p><p><strong>Also listed as:</strong> BIO ENG C125B</p></div>
<p><a href="" class="btn-readless"><span>Robotic Manipulation and Interaction:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 113</span> 
<span class="title">Power Electronics</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2018, Spring 2017, Spring 2016<br/>
Power conversion circuits and techniques. Characterization and design of magnetic devices including transformers, reactors, and electromagnetic machinery. Characteristics of bipolar and MOS power semiconductor devices. Applications to motor control, switching power supplies, lighting, power systems, and other areas as appropriate.</span><br/>
 <a href="" class="btn-readmore"><span>Power Electronics:</span> Read More [+]</a></p>
<div id="70" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 105 or consent of instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Power Electronics:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 117</span> 
<span class="title">Electromagnetic Fields and Waves</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2018, Spring 2017, Spring 2016<br/>
Review of static electric and magnetic fields and applications; Maxwell's equations; transmission lines; propagation and reflection of plane waves; introduction to guided waves, microwave networks, and radiation and antennas. Minilabs on statics, transmission lines, and waves. Explanation of cellphone antennas, WiFi communication, and other wireless technologies.</span><br/>
 <a href="" class="btn-readmore"><span>Electromagnetic Fields and Waves:</span> Read More [+]</a></p>
<div id="139" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Electrical Engineering 16B, Mathematics 53, 54, Physics 7B, or equivalent that covers AC circuits and electromagnetics up to Maxwell's equations</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 2 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Yablonovitch</p></div>
<p><a href="" class="btn-readless"><span>Electromagnetic Fields and Waves:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 118</span> 
<span class="title">Introduction to Optical Engineering</span> 
<span class="hours">3 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Fall 2016, Fall 2015<br/>
Fundamental principles of optical systems. Geometrical optics and aberration theory. Stops and apertures, prisms, and mirrors. Diffraction and interference. Optical materials and coatings. Radiometry and photometry. Basic optical devices and the human eye. The design of optical systems. Lasers, fiber optics, and holography.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Optical Engineering:</span> Read More [+]</a></p>
<div id="372" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Math 53, and EE 16AB or Math 54</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Electrical Engineering 118 after taking Electrical Engineering 218A. A deficient grade in Electrical Engineering 119 may be removed by taking Electrical Engineering 118.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Waller</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Optical Engineering:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 120</span> 
<span class="title">Signals and Systems</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Continuous and discrete-time transform analysis techniques with illustrative applications. Linear and time-invariant systems, transfer functions. Fourier series, Fourier transform, Laplace and Z-transforms. Sampling and reconstruction. Solution of differential and difference equations using transforms. Frequency response, Bode plots, stability analysis. Illustrated by analysis of communication</span><span class="deschide"> systems and feedback control systems.</span><br/>
 <a href="" class="btn-readmore"><span>Signals and Systems:</span> Read More [+]</a></p>
<div id="353" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> EE 16A and 16B</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 4 hours of lecture and 1 hour of recitation per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Signals and Systems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 121</span> 
<span class="title">Introduction to Digital Communication Systems</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2016, Fall 2014, Fall 2013<br/>
Introduction to the basic principles of the design and analysis of modern digital communication systems. Topics include source coding, channel coding, baseband and passband modulation techniques, receiver design, and channel equalization. Applications to design of digital telephone modems, compact disks, and digital wireless communication systems. Concepts illustrated by a sequence of MATLAB</span><span class="deschide"> exercises.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Digital Communication Systems:</span> Read More [+]</a></p>
<div id="282" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> EE 16 A &amp; B; CS 70</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Introduction to Digital Communication Systems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 122</span> 
<span class="title">Introduction to Communication Networks</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2018, Spring 2017, Spring 2016<br/>
This course focuses on the fundamentals of the wired and wireless communication networks. The course covers both the architectural principles for making these networks scalable and robust, as well as the key techniques essential for analyzing and designing them. The topics include graph theory, Markov chains, queuing, optimization techniques, the physical and link layers, switching,</span><span class="deschide"> transport, cellular networks and Wi-Fi.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Communication Networks:</span> Read More [+]</a></p>
<div id="829" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science 70. Computer Science 70</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Introduction to Communication Networks:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 123</span> 
<span class="title">Digital Signal Processing</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2018, Spring 2017, Spring 2016<br/>
Discrete time signals and systems: Fourier and Z transforms, DFT, 2-dimensional versions. Digital signal processing topics: flow graphs, realizations, FFT, chirp-Z algorithms, Hilbert transform relations, quantization effects, linear prediction. Digital filter design methods: windowing, frequency sampling, S-to-Z methods, frequency-transformation methods, optimization methods, 2-dimensional</span><span class="deschide"> filter design.</span><br/>
 <a href="" class="btn-readmore"><span>Digital Signal Processing:</span> Read More [+]</a></p>
<div id="544" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 120</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 1 hour of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Digital Signal Processing:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 126</span> 
<span class="title">Probability and Random Processes</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2017, Fall 2016, Spring 2016<br/>
This course covers the fundamentals of probability and random processes useful in fields such as networks, communication, signal processing, and control. Sample space, events, probability law. Conditional probability. Independence. Random variables. Distribution, density functions. Random vectors. Law of large numbers. Central limit theorem. Estimation and detection. Markov chains.</span><br/>
 <a href="" class="btn-readmore"><span>Probability and Random Processes:</span> Read More [+]</a></p>
<div id="252" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> EE 16A and 16B</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Probability and Random Processes:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG C128</span> 
<span class="title">Feedback Control Systems</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Analysis and synthesis of linear feedback control systems in transform and time domains. Control system design by root locus, frequency response, and state space methods. Applications to electro-mechanical and mechatronics systems.</span><br/>
 <a href="" class="btn-readmore"><span>Feedback Control Systems:</span> Read More [+]</a></p>
<div id="79" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> EE 16A and either ME 132 or EE 120</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Also listed as:</strong> MEC ENG C134</p></div>
<p><a href="" class="btn-readless"><span>Feedback Control Systems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 129</span> 
<span class="title">Neural and Nonlinear Information Processing</span> 
<span class="hours">3 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2010, Fall 2009, Spring 2009<br/>
Principles of massively parallel real-time computation, optimization, and information processing via nonlinear dynamics and analog VLSI neural networks, applications selected from image processing, pattern recognition, feature extraction, motion detection, data compression, secure communication, bionic eye, auto waves, and Turing patterns.</span><br/>
 <a href="" class="btn-readmore"><span>Neural and Nonlinear Information Processing:</span> Read More [+]</a></p>
<div id="124" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 120 or consent of instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam not required. </p><p><strong>Instructor:</strong> Chua</p></div>
<p><a href="" class="btn-readless"><span>Neural and Nonlinear Information Processing:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 130</span> 
<span class="title">Integrated-Circuit Devices</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Overview of electronic properties of semiconductor. Metal-semiconductor contacts, pn junctions, bipolar transistors, and MOS field-effect transistors. Properties that are significant to device operation for integrated circuits. Silicon device fabrication technology.</span><br/>
 <a href="" class="btn-readmore"><span>Integrated-Circuit Devices:</span> Read More [+]</a></p>
<div id="434" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> EE 16A and 16B</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for El Eng 130 after taking El Eng 230A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Integrated-Circuit Devices:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 134</span> 
<span class="title">Fundamentals of Photovoltaic Devices</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2018, Spring 2017, Spring 2016<br/>
This course is designed to give an introduction to, and overview of, the fundamentals of photovoltaic devices. Students will learn how solar cells work, understand the concepts and models of solar cell device physics, and formulate and solve relevant physical problems related to photovoltaic devices. Monocrystalline, thin film and third generation solar cells will be discussed and analyzed.</span><span class="deschide"> Light management and economic considerations in a solar cell system will also be covered.</span><br/>
 <a href="" class="btn-readmore"><span>Fundamentals of Photovoltaic Devices:</span> Read More [+]</a></p>
<div id="961" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> EE 16A and 16B</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Arias</p></div>
<p><a href="" class="btn-readless"><span>Fundamentals of Photovoltaic Devices:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 137A</span> 
<span class="title">Introduction to Electric Power Systems</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Fall 2017, Fall 2016<br/>
Overview of conventional electric power conversion and delivery, emphasizing a systemic understanding of the electric grid with primary focus at the transmission level, aimed toward recognizing needs and opportunities for technological innovation. Topics include aspects of a.c. system design, electric generators, components of transmission and distribution systems, power flow analysis, system</span><span class="deschide"> planning and operation, performance measures, and limitations of legacy technologies.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Electric Power Systems:</span> Read More [+]</a></p>
<div id="776" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 16A &amp; 16B or consent of instructor; Physics 7B</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> von Meier</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Electric Power Systems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 137B</span> 
<span class="title">Introduction to Electric Power Systems</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2018, Spring 2017, Spring 2016<br/>
Overview of recent and potential future evolution of electric power systems with focus on new and emerging technologies for power conversion and delivery, primarily at the distribution level. Topics include power electronics applications, solar and wind generation, distribution system design and operation, electric energy storage, information management and communications, demand response</span><span class="deschide">, and microgrids.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Electric Power Systems:</span> Read More [+]</a></p>
<div id="371" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Electrical Engineering 137A or consent of instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> von Meier</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Electric Power Systems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 140</span> 
<span class="title">Linear Integrated Circuits</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Single and multiple stage transistor amplifiers. Operational amplifiers. Feedback amplifiers, 2-port formulation, source, load, and feedback network loading. Frequency response of cascaded amplifiers, gain-bandwidth exchange, compensation, dominant pole techniques, root locus. Supply and temperature independent biasing and references. Selected applications of analog circuits such as analog-to-digital</span><span class="deschide"> converters, switched capacitor filters, and comparators. Hardware laboratory and design project.</span><br/>
 <a href="" class="btn-readmore"><span>Linear Integrated Circuits:</span> Read More [+]</a></p>
<div id="219" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Electrical Engineering 105</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for El Eng 140 after taking El Eng 240A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Alon, Sanders</p></div>
<p><a href="" class="btn-readless"><span>Linear Integrated Circuits:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 142</span> 
<span class="title">Integrated Circuits for Communications</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Fall 2017, Spring 2016<br/>
Analysis and design of electronic circuits for communication systems, with an emphasis on integrated circuits for wireless communication systems. Analysis of noise and distortion in amplifiers with application to radio receiver design. Power amplifier design with application to wireless radio transmitters. Radio-frequency mixers, oscillators, phase-locked loops, modulators, and demodula</span><span class="deschide">tors.</span><br/>
 <a href="" class="btn-readmore"><span>Integrated Circuits for Communications:</span> Read More [+]</a></p>
<div id="898" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> EE 16A &amp; B; EE 105</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for El Eng 142 after taking El Eng 242A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Integrated Circuits for Communications:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 143</span> 
<span class="title">Microfabrication Technology</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Integrated circuit device fabrication and surface micromachining technology. Thermal oxidation, ion implantation, impurity diffusion, film deposition, expitaxy, lithography, etching, contacts and interconnections, and process integration issues. Device design and mask layout, relation between physical structure and electrical/mechanical performance. MOS transistors and poly-Si surface microstructures</span><span class="deschide"> will be fabricated in the laboratory and evaluated.</span><br/>
 <a href="" class="btn-readmore"><span>Microfabrication Technology:</span> Read More [+]</a></p>
<div id="667" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Physics 7B or equivalent</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Microfabrication Technology:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 144</span> 
<span class="title">Fundamental Algorithms for Systems Modeling, Analysis, and Optimization</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2015, Fall 2014, Fall 2013<br/>
The modeling, analysis, and optimization of complex systems requires a range of algorithms and design software. This course reviews the fundamental techniques underlying the design methodology for complex systems, using integrated circuit design as example. Topics include design flows, discrete and continuous models and algorithms, and strategies for implementing algorithms efficiently and</span><span class="deschide"> correctly in software. Laboratory assignments and a class project will expose students to state-of-the-art tools.</span><br/>
 <a href="" class="btn-readmore"><span>Fundamental Algorithms for Systems Modeling, Analysis, and Optimization:</span> Read More [+]</a></p>
<div id="340" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> EE 16A; Computer Science 70 or consent of instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 4 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Keutzer, Lee, Roychowdhury, Seshia</p></div>
<p><a href="" class="btn-readless"><span>Fundamental Algorithms for Systems Modeling, Analysis, and Optimization:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG C145B</span> 
<span class="title">Medical Imaging Signals and Systems</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Fall 2017, Fall 2016<br/>
Biomedical imaging is a clinically important application of engineering, applied mathematics, physics, and medicine. In this course, we apply linear systems theory and basic physics to analyze X-ray imaging, computerized tomography, nuclear medicine, and MRI. We cover the basic physics and instrumentation that characterizes medical image as an ideal perfect-resolution image blurred by an impulse</span><span class="deschide"> response. This material could prepare the student for a career in designing new medical imaging systems that reliably detect small tumors or infarcts.</span><br/>
 <a href="" class="btn-readmore"><span>Medical Imaging Signals and Systems:</span> Read More [+]</a></p>
<div id="697" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Electrical Engineering 16A and 16B</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Conolly</p><p><strong>Also listed as:</strong> BIO ENG C165</p></div>
<p><a href="" class="btn-readless"><span>Medical Imaging Signals and Systems:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG C145L</span> 
<span class="title">Introductory Electronic Transducers Laboratory</span> 
<span class="hours">3 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2014, Fall 2013, Fall 2012<br/>
Laboratory exercises exploring a variety of electronic transducers for measuring physical quantities such as temperature, force, displacement, sound, light, ionic potential; the use of circuits for low-level differential amplification and analog signal processing; and the use of microcomputers for digital sampling and display. Lectures cover principles explored in the laboratory exercises;</span><span class="deschide"> construction, response and signal to noise of electronic transducers and actuators; and design of circuits for sensing and controlling physical quantities.</span><br/>
 <a href="" class="btn-readmore"><span>Introductory Electronic Transducers Laboratory:</span> Read More [+]</a></p>
<div id="277" class="coursedetails" aria-expanded="false">


<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of lecture and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Derenzo</p><p><strong>Also listed as:</strong> BIO ENG C145L</p></div>
<p><a href="" class="btn-readless"><span>Introductory Electronic Transducers Laboratory:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG C145M</span> 
<span class="title">Introductory Microcomputer Interfacing Laboratory</span> 
<span class="hours">3 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2013, Spring 2012, Spring 2011<br/>
Laboratory exercises constructing basic interfacing circuits and writing 20-100 line C programs for data acquisition, storage, analysis, display, and control. Use of the IBM PC with microprogrammable digital counter/timer, parallel I/O port. Circuit components include anti-aliasing filters, the S/H amplifier, A/D and D/A converters. Exercises include effects of aliasing in periodic sampling</span><span class="deschide">, fast Fourier transforms of basic waveforms, the use of the Hanning filter for leakage reduction, Fourier analysis of the human voice, digital filters, and control using Fourier deconvolution. Lectures cover principles explored in the lab exercises and design of microcomputer-based systems for data acquisitions, analysis and control.</span><br/>
 <a href="" class="btn-readmore"><span>Introductory Microcomputer Interfacing Laboratory:</span> Read More [+]</a></p>
<div id="869" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> EE 16A &amp; 16B</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of lecture and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Derenzo</p><p><strong>Also listed as:</strong> BIO ENG C145M</p></div>
<p><a href="" class="btn-readless"><span>Introductory Microcomputer Interfacing Laboratory:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG C145O</span> 
<span class="title">Laboratory in the Mechanics of Organisms</span> 
<span class="hours">3 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2015, Spring 2014, Spring 2013, Spring 2012<br/>
Introduction to laboratory and field study of the biomechanics of animals and plants using fundamental biomechanical techniques and equipment. Course has a series of rotations involving students in experiments demonstrating how solid and fluid mechanics can be used to discover the way in which diverse organisms move and interact with their physical environment. The laboratories</span><span class="deschide"> emphasize sampling methodology, experimental design, and statistical interpretation of results. Latter third of course devoted to independent research projects. Written reports and class presentation of project results are required.</span><br/>
 <a href="" class="btn-readmore"><span>Laboratory in the Mechanics of Organisms:</span> Read More [+]</a></p>
<div id="834" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Integrative Biology 135 or consent of instructor; for Electrical Engineering and Computer Science students, Electrical Engineering 105, 120 or Computer Science 184</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for C135L after taking 135L.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 6 hours of laboratory, 1 hour of discussion, and 1 hour of fieldwork per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Formerly known as:</strong> Integrative Biology 135L</p><p><strong>Also listed as:</strong> BIO ENG C136L/INTEGBI C135L</p></div>
<p><a href="" class="btn-readless"><span>Laboratory in the Mechanics of Organisms:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 146L</span> 
<span class="title">Application Specific Integrated Circuits Laboratory</span> 
<span class="hours">2 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2015<br/>
This is a lab course that covers the design of modern Application-Specific Integrated Circuits (ASICs). The labs lay the foundation of modern digital design by first setting-up the scripting and hardware description language base for specification of digital systems and interactions with tool flows. Software testing of digital designs is covered leading into a set of labs that cover the design flow. Digital synthesis</span><span class="deschide">, floorplanning, placement and routing are covered, as well as tools to evaluate design timing and power. Chip-level assembly is covered, instantiation of custom IP blocks: I/O pads, memories, PLLs, etc. The labs culminate with a project design – implementation of a 3-stage RISC-V processor with register file and caches.</span><br/>
 <a href="" class="btn-readmore"><span>Application Specific Integrated Circuits Laboratory:</span> Read More [+]</a></p>
<div id="797" class="coursedetails" aria-expanded="false">
<div class="course-section"><p class="course-heading"><strong>Objectives  Outcomes</strong></p><p><strong>Course Objectives:</strong> This course is a one-time offering to supplement the CS150 course offered in the Fall 2014, with a lab and project section that cover the Application-Specific Integrated Circuit Design. The CS150 lectures in the Fall 2014 already covered the necessary lecture material, so students who took the CS150 lab in the Fall of 2014 will have a chance to expand their skills into the area of Application-Specific Integrated Circuit design.<br/>
Hence the pre-requisite for this course is that a student has taken the CS150 course in the Fall 2014.<br/></p></div>
<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Electrical Engineering 40; Electrical Engineering 105 recommended and Computer Science 150 (taken Fall 2014) - mandatory</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Electrical Engineering 146L after taking Fall 2014 version of Electrical Engineering 141/241A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of laboratory and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p><p><strong>Instructor:</strong> Stojanovic</p></div>
<p><a href="" class="btn-readless"><span>Application Specific Integrated Circuits Laboratory:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 147</span> 
<span class="title">Introduction to Microelectromechanical Systems (MEMS)</span> 
<span class="hours">3 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Fall 2017, Fall 2016<br/>
This course will teach fundamentals of micromachining and microfabrication techniques, including planar thin-film process technologies, photolithographic techniques, deposition and etching techniques, and the other technologies that are central to MEMS fabrication. It will pay special attention to teaching of fundamentals necessary for the design and analysis of devices and systems in mechanical</span><span class="deschide">, electrical, fluidic, and thermal energy/signal domains, and will teach basic techniques for multi-domain analysis. Fundamentals of sensing and transduction mechanisms including capacitive and piezoresistive techniques, and design and analysis of micmicromachined miniature sensors and actuators using these techniques will be covered.</span><br/>
 <a href="" class="btn-readmore"><span>Introduction to Microelectromechanical Systems (MEMS):</span> Read More [+]</a></p>
<div id="873" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Electrical Engineering 16A and 16B</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for El Eng 147 after taking El Eng 247A.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructors:</strong> Maharbiz, Nguyen, Pister</p></div>
<p><a href="" class="btn-readless"><span>Introduction to Microelectromechanical Systems (MEMS):</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 192</span> 
<span class="title">Mechatronic Design Laboratory</span> 
<span class="hours">4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2018, Spring 2017, Spring 2016<br/>
Design project course, focusing on application of theoretical principles in electrical engineering to control of a small-scale system, such as a mobile robot. Small teams of students will design and construct a mechatronic system incorporating sensors, actuators, and intelligence.</span><br/>
 <a href="" class="btn-readmore"><span>Mechatronic Design Laboratory:</span> Read More [+]</a></p>
<div id="957" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> EE120, EE16A+EE16B, CS61ABC</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1.5 hours of lecture and 10 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p><p><strong>Instructor:</strong> Fearing</p></div>
<p><a href="" class="btn-readless"><span>Mechatronic Design Laboratory:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 194</span> 
<span class="title">Special Topics</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Spring 2017<br/>
Topics will vary semester to semester. See the Electrical Engineering announcements.</span><br/>
 <a href="" class="btn-readmore"><span>Special Topics:</span> Read More [+]</a></p>
<div id="63" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor</p><p><strong>Repeat rules:</strong> Course may be repeated for credit when topic changes. Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Special Topics:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG H196A</span> 
<span class="title">Senior Honors Thesis Research</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2016, Fall 2015, Spring 2015<br/>
Thesis work under the supervision of a faculty member. A minimum of four units must be taken; the units may be distributed between one and two semesters in any way. To obtain credit a satisfactory thesis must be submitted at the end of the two semesters to the Electrical and Engineering and Computer Science Department archive. Students who complete four units and a thesis in one semester</span><span class="deschide"> receive a letter grade at the end of H196A. Students who do not, receive an IP in H196A and must enroll in H196B.</span><br/>
 <a href="" class="btn-readmore"><span>Senior Honors Thesis Research:</span> Read More [+]</a></p>
<div id="702" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Open only to students in the Electrical Engineering and Computer Science honors program</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of independent study per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. This is part one of a year long series course. A provisional grade of IP (in progress) will be applied and later replaced with the final grade after completing part two of the series. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Senior Honors Thesis Research:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG H196B</span> 
<span class="title">Senior Honors Thesis Research</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2016, Spring 2015, Spring 2014<br/>
Thesis work under the supervision of a faculty member. A minimum of four units must be taken; the units may be distributed between one and two semesters in any way. To obtain credit a satisfactory thesis must be submitted at the end of the two semesters to the Electrical and Engineering and Computer Science Department archive. Students who complete four units and a thesis in one semester</span><span class="deschide"> receive a letter grade at the end of H196A. Students who do not, receive an IP in H196A and must enroll in H196B.</span><br/>
 <a href="" class="btn-readmore"><span>Senior Honors Thesis Research:</span> Read More [+]</a></p>
<div id="138" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Open only to students in the Electrical Engineering and Computer Science honors program</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of independent study per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Letter grade. This is part two of a year long series course. Upon completion, the final grade will be applied to both parts of the series. Final exam required. </p></div>
<p><a href="" class="btn-readless"><span>Senior Honors Thesis Research:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 197</span> 
<span class="title">Field Study</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2018, Spring 2016, Fall 2015<br/>
Students take part in organized individual field sponsored programs with off-campus companies or tutoring/mentoring relevant to specific aspects and applications of computer science on or off campus. Note Summer CPT or OPT students: written report required. Course does not count toward major requirements, but will be counted in the cumulative units toward graduation.</span><br/>
 <a href="" class="btn-readmore"><span>Field Study:</span> Read More [+]</a></p>
<div id="845" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor (see department adviser)</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of fieldwork per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"></span>6 weeks - 2.5-10 hours of fieldwork per week<br/><span style="width: 15px; display: inline-block;"></span>8 weeks - 2-7.5 hours of fieldwork per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Field Study:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 198</span> 
<span class="title">Directed Group Study for Advanced Undergraduates</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2018, Spring 2017, Fall 2016<br/>
Group study of selected topics in electrical engineering, usually relating to new developments.</span><br/>
 <a href="" class="btn-readmore"><span>Directed Group Study for Advanced Undergraduates:</span> Read More [+]</a></p>
<div id="534" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 2.0 GPA or better; 60 units completed</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of directed group study per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Directed Group Study for Advanced Undergraduates:</span> Read Less [-] </a></p></div>
</div>
</div><div class="courseblock">
<h3 class="courseblocktitle">
<span class="code">EL ENG 199</span> 
<span class="title">Supervised Independent Study</span> 
<span class="hours">1 - 4 Units</span>
</h3>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2018, Spring 2018, Fall 2017<br/>
Supervised independent study. Enrollment restrictions apply.</span><br/>
 <a href="" class="btn-readmore"><span>Supervised Independent Study:</span> Read More [+]</a></p>
<div id="213" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor and major adviser</p><p><strong>Credit Restrictions:</strong> Enrollment is restricted; see the Introduction to Courses and Curricula section of this catalog.</p><p><strong>Repeat rules:</strong> Course may be repeated for credit without restriction.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 0 hours of independent study per week</p><p><strong>Summer:</strong> <br/><span style="width: 15px; display: inline-block;"></span>6 weeks - 1-5 hours of independent study per week<br/><span style="width: 15px; display: inline-block;"></span>8 weeks - 1-4 hours of independent study per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Electrical Engineering/Undergraduate</p><p><strong>Grading/Final exam status:</strong> Offered for pass/not pass grade only. Final exam not required. </p></div>
<p><a href="" class="btn-readless"><span>Supervised Independent Study:</span> Read Less [-] </a></p></div>
</div>
</div></div>
]]>
</coursestext>
<faculty>
<![CDATA[
<h2>Faculty and Instructors</h2><p class="facitem"><strong>+ </strong>Indicates this faculty member is the recipient of the Distinguished Teaching Award.</p><h4>Faculty</h4><p class="facitem"><strong>Pieter Abbeel, <i>Associate Professor</i>. </strong>Artificial Intelligence (AI); Control, Intelligent Systems, and Robotics (CIR); Machine Learning.<br/><a href="http://vcresearch.berkeley.edu/faculty/pieter-abbeel"target="_blank">Research Profile</a></p><p class="facitem"><strong>Elad Alon, <i>Professor</i>. </strong>Integrated Circuits (INC); Micro/Nano Electro Mechanical Systems (MEMS); Communications & Networking (COMNET); Design, Modeling and Analysis (DMA).<br/><a href="http://vcresearch.berkeley.edu/faculty/elad-alon"target="_blank">Research Profile</a></p><p class="facitem"><strong>Venkat Anantharam, <i>Professor</i>. </strong>Communications & Networking (COMNET); Artificial Intelligence (AI); Control, Intelligent Systems, and Robotics (CIR); Security (SEC); Signal Processing (SP).<br/><a href="http://vcresearch.berkeley.edu/faculty/venkat-anantharam"target="_blank">Research Profile</a></p><p class="facitem"><strong>Murat Arcack, <i>Professor</i>. </strong>Control, Intelligent Systems, and Robotics (CIR); Biosystems & Computational Biology (BIO).<br/><a href="http://vcresearch.berkeley.edu/faculty/murat-arcak"target="_blank">Research Profile</a></p><p class="facitem"><strong>Ana Claudia Arias, <i>Associate Professor</i>. </strong>Physical Electronics (PHY); Flexible and Printed Electronics; Energy (ENE).</p><p class="facitem"><strong>Krste Asanovic, <i>Professor</i>. </strong>Computer Architecture & Engineering (ARC); Integrated Circuits (INC); Operating Systems & Networking (OSNT);Design, Modeling and Analysis (DMA).<br/><a href="http://vcresearch.berkeley.edu/faculty/krste-asanovic"target="_blank">Research Profile</a></p><p class="facitem"><strong>Babak Ayazifar, <i>Professor</i>. </strong>Education (EDUC), Signal processing and system theory EDUCATION: Development of pedagogical techniques and assessment tools.; Signal Processing (SP), Graph signal processing.</p><p class="facitem"><strong>Jonathan Bachrach, <i>Adjunct Assistant Professor</i>. </strong>Programming Systems (PS); Computer Architecture & Engineering (ARC); Design, Modeling and Analysis (DMA).</p><p class="facitem"><strong>Ruzena Bajcsy, <i>Professor</i>. </strong>Artificial Intelligence (AI); Biosystems & Computational Biology (BIO); Control, Intelligent Systems, and Robotics (CIR); Graphics (GR); Human-Computer Interaction (HCI), Computer vision; Bridging information technology to humanities and social sciences; Security (SEC).<br/><a href="http://vcresearch.berkeley.edu/faculty/ruzena-bajcsy"target="_blank">Research Profile</a></p><p class="facitem"><strong>Brian A. Barsky, <i>Professor</i>. </strong>Computer science, geometric design and modeling, computer graphics, computer aided cornea modeling and visualization, medical imaging, virtual environments for surgical simulation.<br/><a href="http://vcresearch.berkeley.edu/node/13851"target="_blank">Research Profile</a></p><p class="facitem"><strong>Peter L. Bartlett, <i>Professor</i>. </strong>Statistics, machine learning, statistical learning theory, adaptive control.<br/><a href="http://vcresearch.berkeley.edu/node/14413"target="_blank">Research Profile</a></p><p class="facitem"><strong>Alexandre M. Bayen, <i>Professor</i>. </strong>Transportation, modelling and control of distributed parameters systems, large scale infrastructure systems, water distribution.<br/><a href="http://vcresearch.berkeley.edu/node/14130"target="_blank">Research Profile</a></p><p class="facitem"><strong>Jeffrey Bokor, <i>Professor</i>. </strong>Physical Electronics (PHY); Nanotechnology.<br/><a href="http://vcresearch.berkeley.edu/faculty/jeffrey-bokor"target="_blank">Research Profile</a></p><p class="facitem"><strong>Bernhard Boser, <i>Professor</i>. </strong>Biosystems & Computational Biology (BIO); Design, Modeling and Analysis (DMA); Integrated Circuits (INC);Physical Electronics (PHY).<br/><a href="http://vcresearch.berkeley.edu/faculty/bernhard-e-boser"target="_blank">Research Profile</a></p><p class="facitem"><strong>Eric Brewer, <i>Professor</i>. </strong>Operating Systems & Networking (OSNT); Energy (ENE); Security (SEC); Developing regions; Programming languages.<br/><a href="http://vcresearch.berkeley.edu/faculty/eric-brewer"target="_blank">Research Profile</a></p><p class="facitem"><strong>Duncan Callaway, <i>Associate Professor</i>. </strong></p><p class="facitem"><strong>John Canny, <i>Professor</i>. </strong>Computer science, activity-based computing, livenotes, mechatronic devices, flexonics.<br/><a href="http://vcresearch.berkeley.edu/node/14606"target="_blank">Research Profile</a></p><p class="facitem"><strong>Jose M. Carmena, <i>Professor</i>. </strong>Brain-machine interfaces, neural ensemble computation, neuroprosthetics, sensorimotor learning and control.<br/><a href="http://vcresearch.berkeley.edu/node/14341"target="_blank">Research Profile</a></p><p class="facitem"><strong>Constance Chang-Hasnain, <i>Professor</i>. </strong>Microsystems and materials; Nano-Optoelectronic devices.</p><p class="facitem"><strong>Alessandro Chiesa, <i>Assistant Professor</i>. </strong>Security (SEC); Theory (THY).</p><p class="facitem"><strong>John Chuang, <i>Professor</i>. </strong>Computer networking, computer security, economic incentives, ICTD.<br/><a href="http://vcresearch.berkeley.edu/node/15010"target="_blank">Research Profile</a></p><p class="facitem"><strong>Phillip Colella, <i>Professor in Residence</i>. </strong></p><p class="facitem"><strong>Steven Conolly, <i>Professor</i>. </strong>Medical imaging instrumentation and control.<br/><a href="http://vcresearch.berkeley.edu/faculty/steven-conolly"target="_blank">Research Profile</a></p><p class="facitem"><strong>Thomas Courtade, <i>Assistant Professor</i>. </strong>Communications & Networking (COMNET).<br/><a href="http://vcresearch.berkeley.edu/faculty/thomas-courtade"target="_blank">Research Profile</a></p><p class="facitem"><strong>David E. Culler, <i>Professor</i>. </strong>Computer Architecture & Engineering (ARC); Energy (ENE); Operating Systems & Networking (OSNT);Programming Systems (PS); Security (SEC); Parallel architecture; High-performance networks; Workstation clusters.<br/><a href="http://vcresearch.berkeley.edu/faculty/david-e-culler"target="_blank">Research Profile</a></p><p class="facitem"><strong>Trevor Darrell, <i>Professor in Residence</i>. </strong>Artificial Intelligence (AI); Control, Intelligent Systems, and Robotics (CIR); Computer Vision.</p><p class="facitem"><strong>James W. Demmel, <i>Professor</i>. </strong>Computer science, scientific computing, numerical analysis, linear algebra.<br/><a href="http://vcresearch.berkeley.edu/node/14088"target="_blank">Research Profile</a></p><p class="facitem"><strong>John DeNero, <i>Assistant Teaching Professor</i>. </strong>Artificial Intelligence (AI); Education (EDUC).</p><p class="facitem"><strong>Anca Dragan, <i>Assistant Professor</i>. </strong>Artificial Intelligence (AI); Control, Intelligent Systems, and Robotics (CIR); Human-Computer Interaction (HCI).</p><p class="facitem"><strong>Prabal Dutta, <i>Associate Professor</i>. </strong></p><p class="facitem"><strong>Alexei (Alyosha) Efros, <i>Associate Professor</i>. </strong>Computer Vision; Graphics (GR); Artificial Intelligence (AI).<br/><a href="http://vcresearch.berkeley.edu/faculty/alexei-efros"target="_blank">Research Profile</a></p><p class="facitem"><strong>Laurent El Ghaoui, <i>Professor</i>. </strong>Decision-making under uncertainty, convex optimization, robust solutions, semidefinite programming, exhaustive simulation.<br/><a href="http://vcresearch.berkeley.edu/node/15019"target="_blank">Research Profile</a></p><p class="facitem"><strong>Ronald S. Fearing, <i>Professor</i>. </strong>Control, Intelligent Systems, and Robotics (CIR); Biosystems & Computational Biology (BIO).</p><p class="facitem"><strong>Armando Fox, <i>Professor</i>. </strong>Programming systems (PS), Education (EDUC), Operating Systems and Networking (OSNT).<br/><a href="http://vcresearch.berkeley.edu/faculty/armando-fox"target="_blank">Research Profile</a></p><p class="facitem"><strong>Michael Franklin, <i>Adjunct Professor</i>. </strong>Operating Systems & Networking (OSNT), AMPLab.</p><p class="facitem"><strong>Gerald Friedland, <i>Adjunct Assistant Professor</i>. </strong></p><p class="facitem"><strong>+ Robert J. Full, <i>Professor</i>. </strong>Energetics, comparative biomechanics, arthropod, adhesion, comparative physiology, locomotion, neuromechanics, biomimicry, biological inspiration, reptile, gecko, amphibian, robots, artificial muscles.<br/><a href="http://vcresearch.berkeley.edu/node/14168"target="_blank">Research Profile</a></p><p class="facitem"><strong>Jack L. Gallant, <i>Professor</i>. </strong>Vision science, form vision, attention, fMRI, computational neuroscience, natural scene perception, brain encoding, brain decoding.<br/><a href="http://vcresearch.berkeley.edu/node/14700"target="_blank">Research Profile</a></p><p class="facitem"><strong>Dan Garcia, <i>Teaching Professor</i>. </strong>Education (EDUC); Computational Game Theory; Graphics (GR).</p><p class="facitem"><strong>Sanjam Garg, <i>Assistant Professor</i>. </strong>Theory (THY); Security (SEC).<br/><a href="http://vcresearch.berkeley.edu/faculty/sanjam-garg"target="_blank">Research Profile</a></p><p class="facitem"><strong>Ali Ghodsi, <i>Adjunct Assistant Professor</i>. </strong>Database Management Systems (DBMS); Operating Systems & Networking (OSNT).</p><p class="facitem"><strong>Ken Goldberg, <i>Professor</i>. </strong>Robotics, art, social media, new media, automation.<br/><a href="http://vcresearch.berkeley.edu/node/14251"target="_blank">Research Profile</a></p><p class="facitem"><strong>Joseph Gonzalez, <i>Assistant Professor</i>. </strong>Artificial Intelligence (AI); Database Management Systems (DBMS).</p><p class="facitem"><strong>Tom Griffiths, <i>Associate Professor</i>. </strong>Machine learning, computational models of human cognition, Bayesian statistics, cultural evolution.<br/><a href="http://vcresearch.berkeley.edu/node/14745"target="_blank">Research Profile</a></p><p class="facitem"><strong>Moritz Hardt, <i>Assistant Profesor</i>. </strong></p><p class="facitem"><strong>Bjoern Hartmann, <i>Associate Professor</i>. </strong>Human-Computer Interaction (HCI); Graphics (GR); Programming Systems (PS).</p><p class="facitem"><strong>Marti A. Hearst, <i>Professor</i>. </strong>Information retrieval, human-computer interaction, user interfaces, information visualization, web search, search user interfaces, empirical computational linguistics, natural language processing, text mining, social media.<br/><a href="http://vcresearch.berkeley.edu/node/14819"target="_blank">Research Profile</a></p><p class="facitem"><strong>Joseph M. Hellerstein, <i>Professor</i>. </strong>Database Management Systems (DBMS); Operating Systems & Networking (OSNT).<br/><a href="http://vcresearch.berkeley.edu/faculty/joseph-m-hellerstein"target="_blank">Research Profile</a></p><p class="facitem"><strong>Paul N. Hilfinger, <i>Teaching Professor</i>. </strong>Programming Systems (PS); Scientific Computing (SCI); Software engineering; Parallel programming techniques.<br/><a href="http://vcresearch.berkeley.edu/faculty/paul-n-hilfinger"target="_blank">Research Profile</a></p><p class="facitem"><strong>Joshua Hug, <i>Assistant Teaching Professor</i>. </strong>Education (EDUC); Computer Science education.</p><p class="facitem"><strong>Ali Javey, <i>Professor</i>. </strong>Physical Electronics (PHY); Energy (ENE); Micro/Nano Electro Mechanical Systems (MEMS); Nanomaterials and Nanotechnology.<br/><a href="http://vcresearch.berkeley.edu/faculty/ali-javey"target="_blank">Research Profile</a></p><p class="facitem"><strong>Michael I. Jordan, <i>Professor</i>. </strong>Computer science, artificial intelligence, bioinformatics, statistics, machine learning, electrical engineering, applied statistics, optimization.<br/><a href="http://vcresearch.berkeley.edu/node/13970"target="_blank">Research Profile</a></p><p class="facitem"><strong>Anthony D. Joseph, <i>Professor</i>. </strong>Operating Systems & Networking (OSNT); Security (SEC); Computer and Network Security; Distributed systems; Mobile computing; Wireless networking; Software engineering, and operating systems.<br/><a href="http://vcresearch.berkeley.edu/faculty/anthony-d-joseph"target="_blank">Research Profile</a></p><p class="facitem"><strong>+ Richard Karp, <i>Professor</i>. </strong>Computational molecular biology, genomics, DNA molecules, structure of genetic regulatory networks, combinatorial and statsitical methods.<br/><a href="http://vcresearch.berkeley.edu/faculty/richard-karp"target="_blank">Research Profile</a></p><p class="facitem"><strong>Randy H. Katz, <i>Professor</i>. </strong>Computer Architecture & Engineering (ARC); Operating Systems & Networking (OSNT); Distributed and networked systems design and implementation.</p><p class="facitem"><strong>Kurt Keutzer, <i>Professor</i>. </strong>Computer Architecture & Engineering (ARC); Design, Modeling and Analysis (DMA); Scientific Computing (SCI).<br/><a href="http://vcresearch.berkeley.edu/faculty/kurt-keutzer"target="_blank">Research Profile</a></p><p class="facitem"><strong>Daniel Klein, <i>Professor</i>. </strong>Artificial Intelligence (AI); Natural Language Processing, Computational Linguistics, Machine Learning.<br/><a href="http://vcresearch.berkeley.edu/faculty/daniel-klein"target="_blank">Research Profile</a></p><p class="facitem"><strong>John D. Kubiatowicz, <i>Professor</i>. </strong>Operating Systems & Networking (OSNT); Security (SEC); Computer architecture; Quantum computer design; Internet-scale storage systems; Peer-to-peer networking.<br/><a href="http://vcresearch.berkeley.edu/faculty/john-d-kubiatowicz"target="_blank">Research Profile</a></p><p class="facitem"><strong>Andreas Kuehlmann, <i>Adjunct Professor</i>. </strong>Design, Modeling and Analysis (DMA).<br/><a href="http://vcresearch.berkeley.edu/faculty/andreas-kuehlmann"target="_blank">Research Profile</a></p><p class="facitem"><strong>Edward A. Lee, <i>Professor</i>. </strong>Embedded Software, Real-Time Systems, Cyber-Physical Systems, Concurrency; Design, Modeling and Analysis (DMA); Programming Systems (PS);Signal Processing (SP).<br/><a href="http://vcresearch.berkeley.edu/faculty/edward-lee"target="_blank">Research Profile</a></p><p class="facitem"><strong>Luke Lee, <i>Professor</i>. </strong>Biophotonics, biophysics, bionanoscience, molecular imaging, single cell analysis, bio-nano interfaces, integrated microfluidic devices (iMD) for diagnostics and preventive personalized medicine.<br/><a href="http://vcresearch.berkeley.edu/node/14953"target="_blank">Research Profile</a></p><p class="facitem"><strong>Sergey Levine, <i>Assisstant Professor</i>. </strong></p><p class="facitem"><strong>Chunlei Liu, <i>Associate Professor</i>. </strong></p><p class="facitem"><strong>Tsu-Jae King Liu, <i>Professor</i>. </strong>Physical Electronics (PHY); Micro/Nano Electro Mechanical Systems (MEMS).<br/><a href="http://vcresearch.berkeley.edu/faculty/tsu-jae-king-liu"target="_blank">Research Profile</a></p><p class="facitem"><strong>Michael Lustig, <i>Associate Professor</i>. </strong>Medical Imaging; Magnetic Resonance Imaging; Signal Processing (SP); Scientific Computing (SCI); Physical Electronics (PHY); Communications & Networking (COMNET); Biosystems & Computational Biology (BIO); Control, Intelligent Systems, and Robotics (CIR).</p><p class="facitem"><strong>Michel Maharbiz, <i>Professor</i>. </strong>Neural interfaces, bioMEMS, microsystems, MEMS, microsystems for the life sciences.<br/><a href="http://vcresearch.berkeley.edu/node/15053"target="_blank">Research Profile</a></p><p class="facitem"><strong>Jitendra Malik, <i>Professor</i>. </strong>Artificial Intelligence (AI); Biosystems & Computational Biology (BIO); Control, Intelligent Systems, and Robotics (CIR); Graphics (GR); Human-Computer Interaction (HCI); Signal Processing (SP);.<br/><a href="http://vcresearch.berkeley.edu/faculty/jitendra-malik"target="_blank">Research Profile</a></p><p class="facitem"><strong>Elchanan Mossel, <i>Professor</i>. </strong>Applied probability, statistics, mathematics, finite markov chains, markov random fields, phlylogeny.<br/><a href="http://vcresearch.berkeley.edu/node/15148"target="_blank">Research Profile</a></p><p class="facitem"><strong>Rikky Muller, <i>Assistant Professor</i>. </strong>Integrated Circuits (INC); Biosystems & Computational Biology (BIO); Micro/Nano Electro Mechanical Systems (MEMS).</p><p class="facitem"><strong>George Necula, <i>Professor</i>. </strong>Software engineering, programming systemsm, security, program analysis.<br/><a href="http://vcresearch.berkeley.edu/faculty/george-necula"target="_blank">Research Profile</a></p><p class="facitem"><strong>Ren Ng, <i>Assistant Professor</i>. </strong>Imaging Systems; Computational Photography;; Signal Processing (SP); Optics.</p><p class="facitem"><strong>Clark Nguyen, <i>Professor</i>. </strong>Micro/Nano Electro Mechanical Systems (MEMS); Integrated Circuits (INC); Physical Electronics (PHY); Design, Modeling and Analysis (DMA).<br/><a href="http://vcresearch.berkeley.edu/faculty/clark-nguyen"target="_blank">Research Profile</a></p><p class="facitem"><strong>Ali Niknejad, <i>Professor</i>. </strong>Integrated Circuits (INC), Microwave and mm-Wave Circuits and Systems; Physical Electronics (PHY); Signal Processing (SP); Applied Electromagnetics; Communications & Networking (COMNET); Design, Modeling and Analysis (DMA).<br/><a href="http://vcresearch.berkeley.edu/faculty/ali-m-niknejad"target="_blank">Research Profile</a></p><p class="facitem"><strong>Borivoje Nikolic, <i>Professor</i>. </strong>Integrated Circuits (INC); Communications & Networking (COMNET); Design, Modeling and Analysis (DMA); Computer Architecture & Engineering (ARC).<br/><a href="http://vcresearch.berkeley.edu/faculty/borivoje-nikolic"target="_blank">Research Profile</a></p><p class="facitem"><strong>James O'Brien, <i>Professor</i>. </strong>Computer graphics, fluid dynamics, computer simulation, physically based animation, finite element simulation, human perception, image forensics, video forensics, computer animation, special effects for film, video game technology, motion capture.<br/><a href="http://vcresearch.berkeley.edu/node/15357"target="_blank">Research Profile</a></p><p class="facitem"><strong>Bruno Olshausen, <i>Professor</i>. </strong>Visual perception, computational neuroscience, computational vision.<br/><a href="http://vcresearch.berkeley.edu/node/14277"target="_blank">Research Profile</a></p><p class="facitem"><strong>Lior Pachter, <i>Professor</i>. </strong>Mathematics, applications of statistics, combinatorics to problems in biology.<br/><a href="http://vcresearch.berkeley.edu/node/15209"target="_blank">Research Profile</a></p><p class="facitem"><strong>Christos H. Papadimitriou, <i>Professor</i>. </strong>Economics, evolution., algorithms, game theory, networks, optimization, complexity.<br/><a href="http://vcresearch.berkeley.edu/node/15369"target="_blank">Research Profile</a></p><p class="facitem"><strong>Abhay Parekh, <i>Adjunct Professor</i>. </strong>Communications & Networking (COMNET).</p><p class="facitem"><strong>Shyam Parekh, <i>Adjunct Associate Professor</i>. </strong>Communications & Networking (COMNET).</p><p class="facitem"><strong>Eric Paulos, <i>Associate Professor</i>. </strong>Human-Computer Interaction (HCI), New Media arts.</p><p class="facitem"><strong>Vern Paxson, <i>Professor</i>. </strong>Security (SEC); Operating Systems & Networking (OSNT).<br/><a href="http://vcresearch.berkeley.edu/faculty/vern-paxson"target="_blank">Research Profile</a></p><p class="facitem"><strong>Kristofer Pister, <i>Professor</i>. </strong>Micro/Nano Electro Mechanical Systems (MEMS); Control, Intelligent Systems, and Robotics (CIR), Micro-robotics; Integrated Circuits (INC), Low-power circuits.<br/><a href="http://vcresearch.berkeley.edu/faculty/kristofer-pister"target="_blank">Research Profile</a></p><p class="facitem"><strong>+ Kameshwar Poolla, <i>Professor</i>. </strong>Cybersecurity, modeling, control, renewable energy, estimation, integrated circuit design and manufacturing, smart grids.<br/><a href="http://vcresearch.berkeley.edu/node/14273"target="_blank">Research Profile</a></p><p class="facitem"><strong>Raluca Ada Popa, <i>Assistant Professor</i>. </strong>Operating Systems & Networking (OSNT); Security (SEC).</p><p class="facitem"><strong>Jan M. Rabaey, <i>Professor</i>. </strong>Communications & Networking (COMNET); Design, Modeling and Analysis (DMA); Energy (ENE); Integrated Circuits (INC); Signal Processing (SP); Computer architecture.<br/><a href="http://vcresearch.berkeley.edu/faculty/jan-m-rabaey"target="_blank">Research Profile</a></p><p class="facitem"><strong>Jonathan Ragan-Kelley, <i>Assistant Professor</i>. </strong></p><p class="facitem"><strong>Prasad Raghavendra, <i>Associate Professor</i>. </strong>Theory (THY).</p><p class="facitem"><strong>Ravi Ramamoorthi, <i>Professor</i>. </strong>Graphics (GR); Scientific Computing (SCI); Signal Processing (SP); Computer Vision.</p><p class="facitem"><strong>Kannan Ramchandran, <i>Professor</i>. </strong>Communications & Networking (COMNET); Signal Processing (SP); Control, Intelligent Systems, and Robotics (CIR).<br/><a href="http://vcresearch.berkeley.edu/faculty/kannan-ramchandran"target="_blank">Research Profile</a></p><p class="facitem"><strong>Gireeja Ranade, <i>Assistant Professor</i>. </strong></p><p class="facitem"><strong>Satish Rao, <i>Professor</i>. </strong>Biosystems & Computational Biology (BIO); Theory (THY).<br/><a href="http://vcresearch.berkeley.edu/faculty/satish-rao"target="_blank">Research Profile</a></p><p class="facitem"><strong>Sylvia Ratnasamy, <i>Associate Professor</i>. </strong>Operating Systems & Networking (OSNT).</p><p class="facitem"><strong>Benjamin Recht, <i>Associate Professor</i>. </strong>Control, Intelligent Systems, and Robotics (CIR); Signal Processing (SP); Machine Learning (ML); Optimization (OPT).</p><p class="facitem"><strong>Jaijeet Roychowdhury, <i>Professor</i>. </strong>Design, Modeling and Analysis (DMA); Scientific Computing (SCI); Biosystems & Computational Biology (BIO).</p><p class="facitem"><strong>Stuart Russell, <i>Professor</i>. </strong>Artificial intelligence, computational biology, algorithms, machine learning, real-time decision-making, probabilistic reasoning.<br/><a href="http://vcresearch.berkeley.edu/faculty/stuart-j-russell"target="_blank">Research Profile</a></p><p class="facitem"><strong>Anant Sahai, <i>Associate Professor</i>. </strong>Communications & Networking (COMNET), Information Theory, Cognitive Radio and Spectrum Sharing; Control, Intelligent Systems, and Robotics (CIR), Distributed and Networked Control; Signal Processing (SP); Theory (THY), Information Theory.<br/><a href="http://vcresearch.berkeley.edu/faculty/anant-sahai"target="_blank">Research Profile</a></p><p class="facitem"><strong>Sayeef Salahuddin, <i>Associate Professor</i>. </strong>Physical Electronics (PHY); Design, Modeling and Analysis (DMA); Energy (ENE); Scientific Computing (SCI).</p><p class="facitem"><strong>Seth R. Sanders, <i>Professor</i>. </strong>Energy (ENE); Control, Intelligent Systems, and Robotics (CIR); Integrated Circuits (INC); Power and electronics systems.<br/><a href="http://vcresearch.berkeley.edu/faculty/seth-r-sanders"target="_blank">Research Profile</a></p><p class="facitem"><strong>Alberto L. Sangiovanni-Vincentelli, <i>Professor</i>. </strong>Design, Modeling and Analysis (DMA), Embedded System Design; Design methodologies and tools; Control, Intelligent Systems, and Robotics (CIR), Hybrid systems; Design methodologies and tools; Communications & Networking (COMNET), Wireless sensor network design; Design methodologies and tools.<br/><a href="http://vcresearch.berkeley.edu/faculty/alberto-sangiovanni-vincentelli"target="_blank">Research Profile</a></p><p class="facitem"><strong>S. Shankar Sastry, <i>Professor</i>. </strong>Computer science, robotics, arial robots, cybersecurity, cyber defense, homeland defense, nonholonomic systems, control of hybrid systems, sensor networks, interactive visualization, robotic telesurgery, rapid prototyping.<br/><a href="http://vcresearch.berkeley.edu/node/13862"target="_blank">Research Profile</a></p><p class="facitem"><strong>Koushik Sen, <i>Associate Professor</i>. </strong>Programming Systems (PS), Software Engineering, Programming Languages, and Formal Methods: Software Testing, Verification, Model Checking, Runtime Monitoring, Performance Evaluation, and Computational Logic.; Security (SEC).<br/><a href="http://vcresearch.berkeley.edu/faculty/koushik-sen"target="_blank">Research Profile</a></p><p class="facitem"><strong>Sanjit Seshia, <i>Professor</i>. </strong>Electronic design automation, theory, computer security, program analysis, dependable computing, computational logic, formal methods.<br/><a href="http://vcresearch.berkeley.edu/faculty/sanjit-seshia"target="_blank">Research Profile</a></p><p class="facitem"><strong>Scott Shenker, <i>Professor</i>. </strong>Internet Architecture, Software-Defined Networks, Datacenter Infrastructure, Large-Scale Distributed Systems, Game Theory and Economics;Operating Systems & Networking (OSNT).<br/><a href="http://vcresearch.berkeley.edu/faculty/scott-shenker"target="_blank">Research Profile</a></p><p class="facitem"><strong>Jonathan Shewchuk, <i>Professor</i>. </strong>Scientific Computing (SCI); Theory (THY); Graphics (GR).<br/><a href="http://vcresearch.berkeley.edu/faculty/jonathan-shewchuk"target="_blank">Research Profile</a></p><p class="facitem"><strong>Alistair Sinclair, <i>Professor</i>. </strong>Theory (THY); Randomized algorithms; applied probability; statistical physics.<br/><a href="http://vcresearch.berkeley.edu/faculty/alistair-sinclair"target="_blank">Research Profile</a></p><p class="facitem"><strong>Dawn Song, <i>Professor</i>. </strong>Operating Systems & Networking (OSNT); Security (SEC); Programming Systems (PS).<br/><a href="http://vcresearch.berkeley.edu/faculty/dawn-song"target="_blank">Research Profile</a></p><p class="facitem"><strong>Yun Song, <i>Professor</i>. </strong>Computational biology, population genomics, applied probability and statistics.<br/><a href="http://vcresearch.berkeley.edu/node/14178"target="_blank">Research Profile</a></p><p class="facitem"><strong>Costas J. Spanos, <i>Professor</i>. </strong>Energy (ENE); Integrated Circuits (INC); Physical Electronics (PHY); Semiconductor manufacturing; Solid-State Devices.<br/><a href="http://vcresearch.berkeley.edu/faculty/costas-j-spanos"target="_blank">Research Profile</a></p><p class="facitem"><strong>Ian Stoica, <i>Professor</i>. </strong>Operating Systems & Networking (OSNT); Security (SEC); Networking and distributed computer systems, Quality of Service (Q of S) and resources management, modeling and performance analysis.</p><p class="facitem"><strong>Vladimir Stojanovic, <i>Associate Professor</i>. </strong>Integrated Circuits (INC); Micro/Nano Electro Mechanical Systems (MEMS); Computer Architecture & Engineering (ARC); Physical Electronics (PHY); Communications & Networking (COMNET); Integrated Photonics, Circuit design with Emerging-Technologies.<br/><a href="http://vcresearch.berkeley.edu/faculty/vladimir-stojanovic"target="_blank">Research Profile</a></p><p class="facitem"><strong>Bernd Sturmfels, <i>Professor</i>. </strong>Mathematics, combinatorics, computational algebraic geometry.<br/><a href="http://vcresearch.berkeley.edu/node/15683"target="_blank">Research Profile</a></p><p class="facitem"><strong>Vivek Subramanian, <i>Professor</i>. </strong>Physical Electronics (PHY); Energy (ENE); Integrated Circuits (INC).<br/><a href="http://vcresearch.berkeley.edu/faculty/vivek-subramanian"target="_blank">Research Profile</a></p><p class="facitem"><strong>Claire Tomlin, <i>Professor</i>. </strong>Control, Intelligent Systems, and Robotics (CIR); Biosystems & Computational Biology (BIO); Control theory; hybrid and embedded systems; biological cell networks.<br/><a href="http://vcresearch.berkeley.edu/faculty/claire-tomlin"target="_blank">Research Profile</a></p><p class="facitem"><strong>Luca Trevisan, <i>Professor</i>. </strong>Theory (THY), (Computational Complexity, Randomness in Computation, Combinatorial Optimization); Security (SEC).</p><p class="facitem"><strong>Stavros Tripakis, <i>Adjunct Associate Professor</i>. </strong>Design, Modeling and Analysis (DMA), Computer-Aided System Design, Formal Methods, Verification, Synthesis, Embedded and Cyber-Physical Systems; Programming Systems (PS).</p><p class="facitem"><strong>David Tse, <i>Adjunct Professor</i>. </strong>Communications & Networking (COMNET).<br/><a href="http://vcresearch.berkeley.edu/faculty/david-tse"target="_blank">Research Profile</a></p><p class="facitem"><strong>Doug Tygar, <i>Professor</i>. </strong>Privacy, technology policy, computer security, electronic commerce, software engineering, reliable systems, embedded systems, computer networks, cryptography, cryptology, authentication, ad hoc networks.<br/><a href="http://vcresearch.berkeley.edu/node/15560"target="_blank">Research Profile</a></p><p class="facitem"><strong>Umesh Vazirani, <i>Professor</i>. </strong>Quantum computation, hamiltonian complexity, analysis of algorithms.<br/><a href="http://vcresearch.berkeley.edu/node/15573"target="_blank">Research Profile</a></p><p class="facitem"><strong>Alexandra von Meier, <i>Adjunct Professor</i>. </strong>Energy (ENE), Electric Grids, Power Distribution.</p><p class="facitem"><strong>David Wagner, <i>Professor</i>. </strong>Security (SEC).<br/><a href="http://vcresearch.berkeley.edu/faculty/david-wagner"target="_blank">Research Profile</a></p><p class="facitem"><strong>Martin Wainwright, <i>Professor</i>. </strong>Statistical machine learning, High-dimensional statistics, information theory, Optimization and algorithmss.<br/><a href="http://vcresearch.berkeley.edu/node/15701"target="_blank">Research Profile</a></p><p class="facitem"><strong>Laura Waller, <i>Associate Professor</i>. </strong>Physical Electronics (PHY); Signal Processing (SP); Computational imaging; Optics and Imaging; Biosystems & Computational Biology (BIO); Graphics (GR).<br/><a href="http://vcresearch.berkeley.edu/faculty/laura-waller"target="_blank">Research Profile</a></p><p class="facitem"><strong>Jean Walrand, <i>Professor</i>. </strong>Communications & Networking (COMNET), Performance evaluation; Game theory.<br/><a href="http://vcresearch.berkeley.edu/faculty/jean-walrand"target="_blank">Research Profile</a></p><p class="facitem"><strong>John Wawrzynek, <i>Professor</i>. </strong>Computer Architecture & Engineering (ARC).<br/><a href="http://vcresearch.berkeley.edu/faculty/john-wawrzynek"target="_blank">Research Profile</a></p><p class="facitem"><strong>Adam Wolisz, <i>Adjunct Professor</i>. </strong>Communications & Networking (COMNET); Computer Architecture & Engineering (ARC), System Performance Evaluation.</p><p class="facitem"><strong>Ming C. Wu, <i>Professor</i>. </strong>Si photonics, optoelectronics, nanophotonics, optical MEMS, Optofluidics; Micro/Nano Electro Mechanical Systems (MEMS); Physical Electronics (PHY).</p><p class="facitem"><strong>Eli Yablonovitch, <i>Professor</i>. </strong>Optoelectronics Research Group, high speed optical communications, photonic crystals at optical and microwave frequencies, the milli-Volt switch, optical antennas and solar cells.; Physical Electronics (PHY).<br/><a href="http://vcresearch.berkeley.edu/faculty/eli-yablonovitch"target="_blank">Research Profile</a></p><p class="facitem"><strong>Katherine A. Yelick, <i>Professor</i>. </strong>Programming Systems (PS); Scientific Computing (SCI); Biosystems & Computational Biology (BIO); parallel programming techniques.<br/><a href="http://vcresearch.berkeley.edu/faculty/katherine-yelick"target="_blank">Research Profile</a></p><p class="facitem"><strong>Nir Yosef, <i>Assistant Professor</i>. </strong>Computational biology.<br/><a href="http://vcresearch.berkeley.edu/faculty/nir-yosef"target="_blank">Research Profile</a></p><p class="facitem"><strong>Bin Yu, <i>Professor</i>. </strong>Neuroscience, remote sensing, networks, statistical machine learning, high-dimensional inference, massive data problems, document summarization.<br/><a href="http://vcresearch.berkeley.edu/node/14282"target="_blank">Research Profile</a></p><p class="facitem"><strong>Avideh Zakhor, <i>Professor</i>. </strong>Signal Processing (SP); Artificial Intelligence (AI); Control, Intelligent Systems, and Robotics (CIR); Graphics (GR).<br/><a href="http://vcresearch.berkeley.edu/faculty/avideh-zakhor"target="_blank">Research Profile</a></p><h4>Emeritus Faculty</h4><p class="facitem"><strong>David Attwood, <i>Professor Emeritus</i>. </strong>Short wavelength electromagnetics; Soft X-ray microscopy; Coherence; EUV lithography.<br/><a href="http://vcresearch.berkeley.edu/faculty/david-attwood"target="_blank">Research Profile</a></p><p class="facitem"><strong>Elwyn R. Berlekamp, <i>Professor Emeritus</i>. </strong>Computer science, electrical engineering, mathematics, combinatorial game theory, algebraic coding theory.<br/><a href="http://vcresearch.berkeley.edu/node/14435"target="_blank">Research Profile</a></p><p class="facitem"><strong>Manuel Blum, <i>Professor Emeritus</i>. </strong>Recursive function, cryptographic protocols, program checking.</p><p class="facitem"><strong>Robert K. Brayton, <i>Professor Emeritus</i>. </strong>Design, Modeling and Analysis (DMA); Advanced methods in combinational and sequential logic synthesis and formal verification.<br/><a href="http://vcresearch.berkeley.edu/faculty/robert-k-brayton"target="_blank">Research Profile</a></p><p class="facitem"><strong>Robert W. Brodersen, <i>Professor Emeritus</i>. </strong>Design, Modeling and Analysis (DMA); Integrated Circuits (INC); Signal Processing (SP).</p><p class="facitem"><strong>Thomas F. Budinger, <i>Professor Emeritus</i>. </strong>Image processing, biomedical electronics, quantitative aging, cardiovascular physiology, bioastronautics, image reconstruction, nuclear magnetic resonance, positron emission, tomography, reconstruction tomography, inverse problem mathematics.<br/><a href="http://vcresearch.berkeley.edu/node/14405"target="_blank">Research Profile</a></p><p class="facitem"><strong>Leon O. Chua, <i>Professor Emeritus</i>. </strong>Biosystems & Computational Biology (BIO); Control, Intelligent Systems, and Robotics (CIR), Cellular neural networks; Cellular automata; Complexity;; Nanoelectronics; Nonlinear circuits and systems; Nonlinear dynamics; Chaos;.<br/><a href="http://vcresearch.berkeley.edu/faculty/leon-o-chua"target="_blank">Research Profile</a></p><p class="facitem"><strong>Mike Clancy, <i>Professor Emeritus</i>. </strong>Science education, cognitive development, educational software.<br/><a href="http://vcresearch.berkeley.edu/faculty/michael-clancy"target="_blank">Research Profile</a></p><p class="facitem"><strong>Richard J. Fateman, <i>Professor Emeritus</i>. </strong>Artificial Intelligence (AI); Scientific Computing (SCI), Computer algebra systems; Programming environments and systems; Programming languages and compilers; Symbolic mathematical computation; Document image analysis, multimodal input of mathematics.<br/><a href="http://vcresearch.berkeley.edu/faculty/richard-j-fateman"target="_blank">Research Profile</a></p><p class="facitem"><strong>Jerome A. Feldman, <i>Professor Emeritus</i>. </strong>Artificial Intelligence (AI); Biosystems & Computational Biology (BIO); Security (SEC); cognitive science.<br/><a href="http://vcresearch.berkeley.edu/faculty/jerome-feldman"target="_blank">Research Profile</a></p><p class="facitem"><strong>Domenico Ferrari, <i>Professor Emeritus</i>. </strong>UC Berkeley Unix Project, high-speed network testbeds and the design of real-time communication services and network protocols for multimedia traffic.</p><p class="facitem"><strong>Susan L. Graham, <i>Professor Emeritus</i>. </strong>Graphics (GR); Human-Computer Interaction (HCI); Programming Systems (PS); Scientific Computing (SCI); Software development environments, software engineering.<br/><a href="http://vcresearch.berkeley.edu/faculty/susan-l-graham"target="_blank">Research Profile</a></p><p class="facitem"><strong>Paul R. Gray, <i>Professor Emeritus</i>. </strong>Design, Modeling and Analysis (DMA); Integrated Circuits (INC).<br/><a href="http://vcresearch.berkeley.edu/faculty/paul-r-gray"target="_blank">Research Profile</a></p><p class="facitem"><strong>T. Kenneth Gustafson, <i>Professor Emeritus</i>. </strong>Solid-State Devices; Basic electromagnetic and quantum applications.</p><p class="facitem"><strong>Michael A. Harrison, <i>Professor Emeritus</i>. </strong>Multimedia; User interfaces; Software environments.</p><p class="facitem"><strong>Brian K. Harvey, <i>Professor Emeritus</i>. </strong>Education (EDUC).<br/><a href="http://vcresearch.berkeley.edu/faculty/brian-harvey"target="_blank">Research Profile</a></p><p class="facitem"><strong>David A. Hodges, <i>Professor Emeritus</i>. </strong>Integrated Circuits (INC).</p><p class="facitem"><strong>Chenming Hu, <i>Professor Emeritus</i>. </strong>Semiconductor Device Technologies.<br/><a href="http://vcresearch.berkeley.edu/faculty/chenming-calvin-hu"target="_blank">Research Profile</a></p><p class="facitem"><strong>William M. Kahan, <i>Professor Emeritus</i>. </strong>Computer Architecture & Engineering (ARC); Scientific Computing (SCI); Computer architecture; Scientific computing; Numerical analysis.<br/><a href="http://vcresearch.berkeley.edu/faculty/william-m-kahan"target="_blank">Research Profile</a></p><p class="facitem"><strong>Edward L. Keller, <i>Professor Emeritus</i>. </strong>Computational neuroscience; bioengineering; neurophysiology of the oculomotor system.</p><p class="facitem"><strong>Kam Y. Lau, <i>Professor Emeritus</i>. </strong>Communications & Networking (COMNET); Optoelectronic devices; Microwave and millimeter wave signal transport over optical fiber links.<br/><a href="http://vcresearch.berkeley.edu/faculty/kam-y-lau"target="_blank">Research Profile</a></p><p class="facitem"><strong>Edwin R. Lewis, <i>Professor Emeritus</i>. </strong><br/><a href="http://vcresearch.berkeley.edu/faculty/edwin-r-lewis"target="_blank">Research Profile</a></p><p class="facitem"><strong>Allan J. Lichtenberg, <i>Professor Emeritus</i>. </strong>Nano-Optoelectronics, Electromagnetics/Plasmas; Energy (ENE).<br/><a href="http://vcresearch.berkeley.edu/faculty/allan-j-lichtenberg"target="_blank">Research Profile</a></p><p class="facitem"><strong>Michael A. Lieberman, <i>Professor Emeritus</i>. </strong>Plasma-assisted materials processing; Energy (ENE).<br/><a href="http://vcresearch.berkeley.edu/faculty/michael-lieberman"target="_blank">Research Profile</a></p><p class="facitem"><strong>Kenneth K. Mei, <i>Professor Emeritus</i>. </strong>Nano-Optoelectronics, Electromagnetics/Plasmas.</p><p class="facitem"><strong>David G. Messerschmitt, <i>Professor Emeritus</i>. </strong>Communications & Networking (COMNET); Signal Processing (SP); Business and economics issues in the software industry.</p><p class="facitem"><strong>Robert G. Meyer, <i>Professor Emeritus</i>. </strong>Integrated Circuits (INC).<br/><a href="http://vcresearch.berkeley.edu/faculty/robert-g-meyer"target="_blank">Research Profile</a></p><p class="facitem"><strong>Nelson Morgan, <i>Professor Emeritus</i>. </strong>Signal Processing (SP).</p><p class="facitem"><strong>+ Richard Muller, <i>Professor Emeritus</i>. </strong>Astrophysics, geophysics, physics, elementary particle physics, cosmic micro wave background, supernovae for cosmology, origin of the earth's magnetic flips, Nemesis theory, glacial cycles, red sprites, lunar impacts, iridium measurement.<br/><a href="http://vcresearch.berkeley.edu/node/15154"target="_blank">Research Profile</a></p><p class="facitem"><strong>Andrew R. Neureuther, <i>Professor Emeritus</i>. </strong>Integrated Circuits (INC); Solid-State Devices.<br/><a href="http://vcresearch.berkeley.edu/faculty/andrew-r-neureuther"target="_blank">Research Profile</a></p><p class="facitem"><strong>William G. Oldham, <i>Professor Emeritus</i>. </strong>Integrated circuits; Semiconductor manufacturing.<br/><a href="http://vcresearch.berkeley.edu/faculty/william-g-oldham"target="_blank">Research Profile</a></p><p class="facitem"><strong>Beresford N. Parlett, <i>Professor Emeritus</i>. </strong></p><p class="facitem"><strong>David A. Patterson, <i>Professor Emeritus</i>. </strong>Professor in the Graduate School: Computer Architecture & Engineering (ARC), Computer Architecture and Systems: Parallel Computing performance, correctness, productivity;Biosystems & Computational Biology (BIO), Cancer tumor genomics; Operating Systems & Networking (OSNT).<br/><a href="http://vcresearch.berkeley.edu/faculty/david-patterson"target="_blank">Research Profile</a></p><p class="facitem"><strong>Elijah Polak, <i>Professor Emeritus</i>. </strong>Control, Intelligent Systems, and Robotics (CIR), Numerical methods for engineering optimization.<br/><a href="http://vcresearch.berkeley.edu/faculty/elijah-polak"target="_blank">Research Profile</a></p><p class="facitem"><strong>Chittoor V. Ramamoorthy, <i>Professor Emeritus</i>. </strong>Software engineering.</p><p class="facitem"><strong>Lawrence A. Rowe, <i>Professor Emeritus</i>. </strong>Multimedia Technology.<br/><a href="http://vcresearch.berkeley.edu/faculty/lawrence-rowe"target="_blank">Research Profile</a></p><p class="facitem"><strong>Steven E. Schwarz, <i>Professor Emeritus</i>. </strong>Solid-State Devices; Nano-Optoelectronics, Electromagnetics/Plasmas.</p><p class="facitem"><strong>Carlo H. Sequin, <i>Professor Emeritus</i>. </strong>Geometric modeling, Artistic geometry, Mathematical visualizations.; Graphics (GR); Human-Computer Interaction (HCI); CAD tools.</p><p class="facitem"><strong>Jerome R. Singer, <i>Professor Emeritus</i>. </strong></p><p class="facitem"><strong>Alan J. Smith, <i>Professor Emeritus</i>. </strong>Computer Architecture & Engineering (ARC); Operating Systems & Networking (OSNT); Computer System Performance Analysis, I/O Systems, Cache Memories, Memory Systems.</p><p class="facitem"><strong>Michael Stonebraker, <i>Professor Emeritus</i>. </strong>Database Technology.</p><p class="facitem"><strong>Aram J. Thomasian, <i>Professor Emeritus</i>. </strong><br/><a href="http://vcresearch.berkeley.edu/faculty/aram-thomasian"target="_blank">Research Profile</a></p><p class="facitem"><strong>Theodore Van Duzer, <i>Professor Emeritus</i>. </strong>Superconductor Electronics.<br/><a href="http://vcresearch.berkeley.edu/faculty/theodore-van-duzer"target="_blank">Research Profile</a></p><p class="facitem"><strong>Pravin Varaiya, <i>Professor Emeritus</i>. </strong>Communications & Networking (COMNET); Control, Intelligent Systems, and Robotics (CIR); Energy (ENE); Control; Networks; Power systems; Transportation.</p><p class="facitem"><strong>William J. (Jack) Welch, <i>Professor Emeritus</i>. </strong>Nano-Optoelectronics, Electromagnetics/Plasmas.<br/><a href="http://vcresearch.berkeley.edu/faculty/william-j-welch"target="_blank">Research Profile</a></p><p class="facitem"><strong>Richard M. White, <i>Professor Emeritus</i>. </strong>Energy (ENE); Solid-State Devices.</p><p class="facitem"><strong>Eugene Wong, <i>Professor Emeritus</i>. </strong>Communications & Networking (COMNET).<br/><a href="http://vcresearch.berkeley.edu/faculty/eugene-wong"target="_blank">Research Profile</a></p><p class="facitem"><strong>Felix F. Wu, <i>Professor Emeritus</i>. </strong>Electric power systems analysis; generation and transmission systems planning and investment; power system control and communications; electric energy industry restructuring.<br/><a href="http://vcresearch.berkeley.edu/faculty/felix-f-wu"target="_blank">Research Profile</a></p><p class="facitem"><strong>Lotfi A. Zadeh, <i>Professor Emeritus</i>. </strong>Artificial intelligence, linguistics, control theory, logic, fuzzy sets, decision analysis, expert systems neural networks, soft computing, computing with words, computational theory of perceptions and precisiated natural language.<br/><a href="http://vcresearch.berkeley.edu/faculty/lotfi-zadeh"target="_blank">Research Profile</a></p>]]>
</faculty>
</courseleaf>

